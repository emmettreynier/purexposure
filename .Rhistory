out <- row
} else {
out <- rbind(out, row)
}
}
if (i == 1) {
out2 <- out
} else {
out2 <- rbind(out2, out)
}
}
for (i in 1:length(years)) {
year_dir <- list.files(paste0("~/Documents/pesticides_project/data-raw/PUR/",
years[i]))
sm_year <- substr(years[i], 3, 4)
files <- grep(paste0("udc", sm_year, "_"), year_dir, value = TRUE)
for (j in 1:length(files)) {
county <- substr(files[j], 7, 8)
raw_data <- suppressWarnings(suppressMessages(
readr::read_csv(paste0("~/Documents/pesticides_project/data-raw/PUR/",
years[i], "/", files[j]))
raw_data <- dplyr::mutate_all(raw_data, as.character)
row <- data.frame(ncol(raw_data), county = county, year = years[i],
colnames = colnames(raw_data))
if (j == 1) {
out <- row
} else {
out <- rbind(out, row)
}
}
if (i == 1) {
out2 <- out
} else {
out2 <- rbind(out2, out)
}
}
for (i in 1:length(years)) {
year_dir <- list.files(paste0("~/Documents/pesticides_project/data-raw/PUR/",
years[i]))
sm_year <- substr(years[i], 3, 4)
files <- grep(paste0("udc", sm_year, "_"), year_dir, value = TRUE)
for (j in 1:length(files)) {
county <- substr(files[j], 7, 8)
raw_data <- suppressWarnings(suppressMessages(
readr::read_csv(paste0("~/Documents/pesticides_project/data-raw/PUR/",
years[i], "/", files[j]))
))
raw_data <- dplyr::mutate_all(raw_data, as.character)
row <- data.frame(ncol(raw_data), county = county, year = years[i],
colnames = colnames(raw_data))
if (j == 1) {
out <- row
} else {
out <- rbind(out, row)
}
}
if (i == 1) {
out2 <- out
} else {
out2 <- rbind(out2, out)
}
}
source('~/Documents/purexposure/R/01-helpers.R')
source('~/Documents/purexposure/R/01-helpers.R')
out2
head(out2)
colnames(out2)
colnames(out2) <- c("ncol", "county", "year", "colnames")
head(out2)
out2 %>%
dplyr::group_by(ncol, county, year) %>%
tidyr::nest()
all_data <- out2 %>%
dplyr::group_by(ncol, county, year) %>%
tidyr::nest()
dplyr::filter(all_data, ncol != 33)
saveRDS(all_data, file = "~/Desktop/all_data.rds")
all_data <- readRDS("~/Desktop/all_data.rds")
setwd("~/Documents/purexposure")
year <- "2000"
quiet <- TRUE
url <- paste0("ftp://transfer.cdpr.ca.gov/pub/outgoing/pur_archives/pur",
year, ".zip")
file <- paste0("pur", year, ".zip")
current_dir <- getwd()
dir <- tempdir()
setwd(dir)
download.file(url, destfile = file, mode = "wb", quiet = quiet)
unzip(file, exdir = dir)
county_codes <- readr::read_csv("county.txt")
county_codes <- county_codes %>%
dplyr::rename(county_name = couty_name,
county_code = county_cd) %>%
dplyr::select(county_name, county_code) %>%
dplyr::filter(county_name != "UNKNOWN") # no "unknown" files in 1990:2015
setwd(current_dir)
usethis::use_data(county_codes, overwrite = TRUE)
county_codes
tail(county_codes)
dplyr::filter(all_data, ncol == 33)
dplyr::filter(all_data, ncol == 33)$data[[1]]
expect_match(dplyr::filter(all_data, ncol == 33)$data[[1]]$colnames, dplyr::filter(all_data, ncol == 33)$data[[2]]$colnames)
testthat::expect_match(dplyr::filter(all_data, ncol == 33)$data[[1]]$colnames, dplyr::filter(all_data, ncol == 33)$data[[2]]$colnames)
testthat::expect_equal(dplyr::filter(all_data, ncol == 33)$data[[1]]$colnames, dplyr::filter(all_data, ncol == 33)$data[[2]]$colnames)
?all.equal()
all.equal(c("a", "b"), c("b", "a"))
?all.identical
?is.identical
?identical
identical(c("a", "b"), c("b", "a"))
identical(c("a", "b"), c("a", "b"))
all.equal(c("a", "b"), c("a", "b"))
all.equal(c("a", "b"), c("b", "a"))
right_number <- dplyr::filter(all_data, ncol == 33)$data[[1]]
right_number <- dplyr::filter(all_data, ncol == 33)
right_number
reference <- all_data$data[[1]]
reference <- all_data$data[[1]]$colnames
reference
for (i in 1:nrow(right_number)) {
cols <- right_number[i]$data$colnames
result <- all.equal(reference, cols)
row <- data.frame(result = result, county = right_number$county[i],
year = right_number$year[i])
if (i == 1) {
out <- row
} else {
out <- rbind(out, row)
}
}
i
nrow(right_number)
cols <- right_number$data[i]
cols <- cols$colnames
result <- all.equal(reference, cols)
cols
cols
right_number$data
right_number$data[[i]]$colnames
raw_data
all_data <- readRDS("~/Desktop/all_data.rds")
reference <- as.character(all_data$data[[1]]$colnames)
right_number <- dplyr::filter(all_data, ncol == 33)
i
right_number$county[i]
for (i in 1:nrow(right_number)) {
cols <- as.character(right_number$data[[i]]$colnames)
cols <- cols$colnames
result <- all.equal(reference, cols)
row <- data.frame(result = result, county = as.character(right_number$county[i]),
year = as.character(right_number$year[i]))
if (i == 1) {
out <- row
} else {
out <- rbind(out, row)
}
}
i <- 1
cols <- as.character(right_number$data[[i]]$colnames)
cols <- cols$colnames
for (i in 1:nrow(right_number)) {
cols <- as.character(right_number$data[[i]]$colnames)
result <- all.equal(reference, cols)
row <- data.frame(result = result, county = as.character(right_number$county[i]),
year = as.character(right_number$year[i]))
if (i == 1) {
out <- row
} else {
out <- rbind(out, row)
}
}
out
head(out)
dplyr::filter(out, result == FALSE)
wrong_number <- dplyr::filter(all_data, ncol != 33)
wrong_reference <- as.character(wrong_number$data[[1]]$colnames)
wrong_reference
reference
all.equal(reference, wrong_reference)
length(unique(wrong_reference))
unique(wrong_number$year)
raw-data
raw_dat
raw_dat
raw_data
test <- raw_data %>% dplyr::mutate(test_col = NA)
str(test)
test <- raw_data %>% dplyr::mutate(test_col = NA, test_col = as.character(test_col))
str(test)
devtools::load_all()
library(purexposure)
clean_pur <- pull_clean_pur(1990:2015, "fresno", chemicals = "methyl bromide",
sum_application = TRUE)
help_read_in_counties <- function(code_or_file, type, year) {
sm_year <- substr(year, 3, 4)
if (type == "codes") {
raw_data <- suppressWarnings(suppressMessages(
readr::read_csv(paste0("udc", sm_year, "_", code_or_file, ".txt"))))
raw_data <- dplyr::mutate_all(raw_data, as.character)
} else if (type == "files") {
raw_data <- suppressWarnings(suppressMessages(
readr::read_csv(code_or_file)))
raw_data <- dplyr::mutate_all(raw_data, as.character)
}
if (!"error_flag" %in% colnames(raw_data)) {
raw_data <- raw_data %>%
dplyr::mutate(error_flag = NA,
error_flag = as.character(NA))
}
if (ncol(raw_data) != 34) {
stop()
}
return(raw_data)
}
devtools::load_all()
clean_pur <- pull_clean_pur(1990:2015, "fresno", chemicals = "methyl bromide",
sum_application = TRUE)
library(purexposure)
test <- pull_raw_pur(1990, "fresno")
test
ncol(test)
test <- pull_raw_pur(1990:2015, "fresno")
?map
list <- purrr::map(1990:2015, pull_raw_pur, counties = "fresno")
one <- pull_raw_pur(2005, "fresno")
verbose
two <- pull_raw_pur(2006, "fresno")
if (ncol(raw_data) != 34) {
stop()
}
years <- 2005
counties <- "fresno"
verbose = TRUE
download_progress = FALSE
if ("all" %in% tolower(years)) {
years <- 1990:2015
}
if (!all(is.numeric(years))) {
stop("Years should be four-digit numeric values.")
}
if (all(is.numeric(years)) & (min(years) < 1990 | max(years) > 2015)) {
stop("Years should be between 1990 and 2015.")
}
code_df <- purexposure::county_codes
if (length(years) == 1) {
year_message <- paste0(years, ".")
} else if (length(years) == 2) {
year_message <- paste0(years[1], " and ", years[2], ".")
} else if (length(years) > 1) {
years_list <- split(years, cumsum(c(1, diff(years) != 1)))
if (length(years_list) == 1) {
year_message <- paste0(years[1], " through ", years[length(years)], ".")
} else {
years_vec <- years[1:length(years)-1]
years_vec <- paste(years_vec, collapse = ", ")
year_message <- paste0(years_vec, ", and ", years[length(years)], ".")
}
}
!"all" %in% counties
if (!all(is.character(counties))) {
stop("County names and/or codes should be character strings.")
}
names_clean <- find_counties(counties, return = "names")
if (length(names_clean) == 1) {
county_message <- paste0(names_clean, " county")
} else if (length(names_clean) == 2) {
county_message <- paste0(names_clean[1], " and ", names_clean[2],
" counties")
} else if (length(names_clean) > 2) {
counties_vec <- names_clean[1:length(names_clean)-1]
counties_vec <- paste(counties_vec, collapse = ", ")
county_message <- paste0(counties_vec, ", and ",
names_clean[length(names_clean)], " counties")
}
if (!"all" %in% counties) {
## error handling
if (!all(is.character(counties))) {
stop("County names and/or codes should be character strings.")
}
names_clean <- find_counties(counties, return = "names")
## messaging
## counties section
if (length(names_clean) == 1) {
county_message <- paste0(names_clean, " county")
} else if (length(names_clean) == 2) {
county_message <- paste0(names_clean[1], " and ", names_clean[2],
" counties")
} else if (length(names_clean) > 2) {
counties_vec <- names_clean[1:length(names_clean)-1]
counties_vec <- paste(counties_vec, collapse = ", ")
county_message <- paste0(counties_vec, ", and ",
names_clean[length(names_clean)], " counties")
}
} else {
county_message <- "all counties"
}
if (verbose) {
message(paste0("Pulling PUR data for ", county_message, " for ",
year_message, " Great choice!"))
}
years_counties <- expand.grid(year = years, county = counties) %>%
dplyr::group_by(year) %>%
tidyr::nest() %>%
dplyr::mutate(counties = purrr::map(data, tibble_to_vector))
years_counties
i <- 1
years_counties$year[[i]]
years_counties$counties[[i]]
year <- 2005
counties
download_progress
current_dir <- getwd()
url <- paste0("ftp://transfer.cdpr.ca.gov/pub/outgoing/pur_archives/pur",
year, ".zip")
file <- paste0("pur", year, ".zip")
dir <- tempdir()
setwd(dir)
if (download_progress) {
quiet <- FALSE
} else {
quiet <- TRUE
}
download.file(url, destfile = file, mode = "wb", quiet = quiet)
unzip(file, exdir = dir)
sm_year <- substr(year, 3, 4)
codes <- find_counties(counties[[1]])
codes
type <- "codes"
code_or_file <- "10"
year
sm_year <- substr(year, 3, 4)
if (type == "codes") {
raw_data <- suppressWarnings(suppressMessages(
readr::read_csv(paste0("udc", sm_year, "_", code_or_file, ".txt"))))
raw_data <- dplyr::mutate_all(raw_data, as.character)
} else if (type == "files") {
raw_data <- suppressWarnings(suppressMessages(
readr::read_csv(code_or_file)))
raw_data <- dplyr::mutate_all(raw_data, as.character)
}
if (!"error_flag" %in% colnames(raw_data)) {
raw_data <- raw_data %>%
dplyr::mutate(error_flag = NA,
error_flag = as.character(NA))
}
raw_data
colnames(raw_data)
head(raw_data$comtrs)
unique(raw_data$comtrs)
toy <- data.frame(a = 1:3)
toy
dplyr::select(toy, -b)
if ("error_flag" %in% colnames(raw_data)) {
raw_data <- raw_data %>%
dplyr::select(-error_flag)
}
if ("comtrs" %in% colnames(raw_data)) {
raw_data <- raw_data %>%
dplyr::select(-comtrs)
}
if (ncol(raw_data) != 33) {
stop()
}
devtools::load_all()
current_dir
setwd("~/Documents/purexposure")
devtools::load_all()
clean_pur <- pull_clean_pur(1990:2015, "fresno", chemicals = "methyl bromide",
sum_application = TRUE)
head(clean_pur)
date_min <- lubridate::paste0(year, "-01-01")
date_max <- lubridate::paset0(year, "-12-31")
date_min <- lubridate::ymd(paste0(year, "-01-01"))
date_max <- lubridate::ymd(paset0(year, "-12-31"))
date_max <- lubridate::ymd(paste0(year, "-12-31"))
raw_data
raw_data$applic_dt
tail(clean_pur)
devtools::load_all()
clean_pur <- pull_clean_pur(1990:2015, "fresno", chemicals = "methyl bromide",
sum_application = TRUE)
raw_data
devtools::load_all()
setwd("~/Documents/purexposure")
devtools::load_all()
clean_pur <- pull_clean_pur(1990:2015, "fresno", chemicals = "methyl bromide",
sum_application = TRUE)
years <- 1990:2015
counties <- "fresno"
devtools::load_all()
chemicals <- "methyl bromdie"
sum_application <- TRUE
unit = "section"
sum = "all"
chemical_class = NULL
aerial_ground = TRUE
verbose = TRUE
download_progress = FALSE
raw_df <- pull_raw_pur(years = years, counties = counties, verbose = verbose,
download_progress = download_progress)
head(raw_df)
devtools::load_all()
clean_pur <- pull_clean_pur(1990:2015, "fresno", chemicals = "methyl bromide",
sum_application = TRUE)
head(clean_pur)
clean_pur <- pull_clean_pur(1990:2015, "fresno", chemicals = "methyl bromide")
head(clean_pur)
usethis::use_readme_rmd()
years <- 1990:2015
counties
chemicals
sum_application
sum_application <- FALSE
sum_application
unit = "section"
sum = "all"
chemical_class = NULL
aerial_ground = TRUE
verbose = TRUE
download_progress = TRUE
raw_df <- pull_raw_pur(years = years, counties = counties, verbose = verbose,
download_progress = download_progress)
head(raw_df)
head(raw_df$applic_dt)
tail(raw_df$app)
tail(raw_df$applic_dt)
df <- raw_df %>%
dplyr::mutate(township_pad = stringr::str_pad(raw_df$township, 2, "left", pad = "0"),
range = stringr::str_pad(raw_df$range, 2, "left", pad = "0"),
section = stringr::str_pad(raw_df$section, 2, "left", pad = "0"),
MTRS = as.character(paste0(base_ln_mer, township_pad, tship_dir,
range, range_dir, section)),
township = as.character(paste0(base_ln_mer, township_pad, tship_dir)),
MTR = as.character(paste0(township, range, range_dir))) %>%
dplyr::select(chem_code, lbs_chm_used, MTRS, MTR, county_cd, applic_dt,
aer_gnd_ind, use_no, acre_treated, unit_treated, prodno) %>%
dplyr::mutate(unit_treated = as.factor(unit_treated)) %>%
dplyr::filter(!MTRS %in% c(".0..0..0.", ".00.00.00", "NANANANANANA"),
unit_treated %in% c("A", "S")) %>%
dplyr::mutate(acre_treated = as.numeric(acre_treated),
lbs_chm_used = as.numeric(lbs_chm_used),
acre_treated = ifelse(unit_treated == "S",
acre_treated * 2.29568e-5,
acre_treated),
unit_treated = "A", # going to remove this later - all acres
lbs_per_acre = lbs_chm_used/acre_treated,
chem_code = as.integer(chem_code))
head(df)
calc_max <- df %>%
dplyr::group_by(chem_code) %>%
dplyr::summarize(mean = mean(lbs_per_acre, na.rm = TRUE),
sd = sd(lbs_per_acre, na.rm = TRUE)) %>%
dplyr::mutate(calc_max = mean + 2*sd)
!"all" %in% chemicals
years_chemicals <- expand.grid(year = years, chemicals = chemicals) %>%
dplyr::group_by(year) %>%
tidyr::nest() %>%
dplyr::mutate(chemicals = purrr::map(data, tibble_to_vector))
chem_df <- purrr::map2_dfr(years_chemicals$year, years_chemicals$chemicals,
find_chemical_codes) %>% unique()
df %>%
dplyr::filter(chem_code %in% chem_df$chem_code) %>%
dplyr::left_join(chem_df, by = "chem_code") %>%
dplyr::select(-chemical) %>%
dplyr::mutate(applic_dt = lubridate::mdy(applic_dt))
df %>%
dplyr::filter(chem_code %in% chem_df$chem_code) %>%
dplyr::left_join(chem_df, by = "chem_code") %>%
dplyr::select(-chemical) %>%
dplyr::mutate(applic_dt = lubridate::ymd(applic_dt))
chem_df
find_chemical_codes
years_chemicals$year
years_chemicals$year
years_chemicals$chemicals
find_chemical_codes
find_chemical_codes(1990, "methyl bromide")
purrr::map2_dfr(years_chemicals$year, years_chemicals$chemicals,
find_chemical_codes) %>% unique()
purrr::map2_dfr(years_chemicals$year, years_chemicals$chemicals,
find_chemical_codes)
years_chemicals
years_chemicals$chemicals[[1]]
years_chemicals$year
for (i in 1:nrow(years_chemicals)) {
chem_df <- find_chemical_codes(years_chemicals$year[i],
years_chemicals$chemicals[[i]])
if (i == 1) {
out_chem_df <- chem_df
} else {
out_chem_df <- rbind(out_chem_df, chem_df)
}
}
out_chem_df
i <- 1
find_chemical_codes(years_chemicals$year[i],
years_chemicals$chemicals[[i]])
find_chemical_codes(1990, "methyl brmode")
find_chemical_codes(1990, "methyl bromide")
i
years_chemicals$year[i]
years_chemicals$chemicals[[i]]
find_chemical_codes(years_chemicals$year[i],
years_chemicals$chemicals[[i]])
years_chemicals$year[i]
eval(years_chemicals$year[i])
find_chemical_codes(eval(years_chemicals$year[i]),
eval(years_chemicals$chemicals[[i]]))
find_chemical_codes(1990, "methyl bromide")
year <- years_chemicals$year[i]
chemicals <- years_chemicals$chemicals[[i]]
find_chemical_codes(year, chemicals)
