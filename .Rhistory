township) %>%
dplyr::select(chemical_class, kg_chm_used, section, township,
county_name, county_code, date, aerial_ground)
out %>%
dplyr::left_join(chemical_class, by = c("chem_code", "chemname")) %>%
dplyr::mutate(chemical_class = ifelse(is.na(chemical_class), "other",
chemical_class)) %>%
dplyr::group_by(chemical_class, section, county_name, county_code,
date) %>%
dplyr::summarise(kg_chm_used = sum(kg_chm_used, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::left_join(section_townships, by = "section") %>%
dplyr::arrange(date, county_name, county_code, chemical_class,
township) %>%
dplyr::select(chemical_class, kg_chm_used, section, township,
county_name, county_code, date)
out %>%
dplyr::left_join(chemical_class, by = c("chem_code", "chemname")) %>%
dplyr::mutate(chemical_class = ifelse(is.na(chemical_class), "other",
chemical_class)) %>%
dplyr::group_by(chemical_class, township, county_name, county_code,
date, aerial_ground) %>%
dplyr::summarise(kg_chm_used = sum(kg_chm_used, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::arrange(date, county_name, county_code, chemical_class,
township) %>%
dplyr::select(chemical_class, kg_chm_used, township,
county_name, county_code, date, aerial_ground)
out %>%
dplyr::left_join(chemical_class, by = c("chem_code", "chemname")) %>%
dplyr::mutate(chemical_class = ifelse(is.na(chemical_class), "other",
chemical_class)) %>%
dplyr::group_by(chemical_class, township, county_name, county_code,
date) %>%
dplyr::summarise(kg_chm_used = sum(kg_chm_used, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::arrange(date, county_name, county_code, chemical_class,
township) %>%
dplyr::select(chemical_class, kg_chm_used, township,
county_name, county_code, date)
out <- out %>%
dplyr::left_join(chemical_class, by = c("chem_code", "chemname")) %>%
dplyr::mutate(chemical_class = ifelse(is.na(chemical_class), "other",
chemical_class)) %>%
dplyr::group_by(chemical_class, township, county_name, county_code,
date) %>%
dplyr::summarise(kg_chm_used = sum(kg_chm_used, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::arrange(date, county_name, county_code, chemical_class,
township) %>%
dplyr::select(chemical_class, kg_chm_used, township,
county_name, county_code, date)
unique(out$chemical_class)
devtools::document()
?pur_data
devtools::document()
?pur_data
devtools::document()
?pur_data
pur_data <- function(years, counties, chemicals = "all", sum_application = FALSE,
unit = "section", sum_by = "active_ingredient",
chemical_class = NULL,
include_ag = TRUE, verbose = TRUE,
download_progress = FALSE) {
raw_df <- pull_raw_pur(years = years, counties = counties, verbose = verbose,
download_progress = download_progress)
df <- raw_df %>%
dplyr::mutate(township_pad = stringr::str_pad(raw_df$township, 2, "left", pad = "0"),
range = stringr::str_pad(raw_df$range, 2, "left", pad = "0"),
section = stringr::str_pad(raw_df$section, 2, "left", pad = "0"),
MTRS = as.character(paste0(base_ln_mer, township_pad, tship_dir,
range, range_dir, section)),
township = as.character(paste0(base_ln_mer, township_pad, tship_dir)),
MTR = as.character(paste0(township, range, range_dir))) %>%
dplyr::select(chem_code, lbs_chm_used, MTRS, MTR, county_cd, applic_dt,
aer_gnd_ind, use_no, acre_treated, unit_treated) %>%
dplyr::mutate(unit_treated = as.factor(unit_treated)) %>%
dplyr::filter(!MTRS %in% c(".0..0..0.", ".00.00.00", "NANANANANANA"),
unit_treated %in% c("A", "S")) %>%
dplyr::mutate(acre_treated = as.numeric(acre_treated),
lbs_chm_used = as.numeric(lbs_chm_used),
acre_treated = ifelse(unit_treated == "S",
acre_treated * 2.29568e-5,
acre_treated),
unit_treated = "A", # going to remove this later - all acres
lbs_per_acre = lbs_chm_used/acre_treated,
chem_code = as.integer(chem_code))
# correct for outliers (Gunier et al. (2001))
# they used 1995 - I'm doing this for each year
# if lbs per acre is larger than the calculated max rate of lbs per acre
# (mean rate plus 2 standard deviations) then lbs_chm_used is replaced
# with the calculated max rate multiplied by number of acres treated (acre_treated)
## might want to re-think this... PUR already has outlier control. (outlier90.txt)
calc_max <- df %>%
dplyr::group_by(chem_code) %>%
dplyr::summarize(mean = mean(lbs_per_acre, na.rm = TRUE),
sd = sd(lbs_per_acre, na.rm = TRUE)) %>%
dplyr::mutate(calc_max = mean + 2*sd)
## filter active ingredients, add chemname column
if (!"all" %in% chemicals) {
years_chemicals <- expand.grid(year = years, chemicals = chemicals) %>%
dplyr::group_by(year) %>%
tidyr::nest() %>%
dplyr::mutate(chemicals = purrr::map(data, tibble_to_vector))
chem_df <- purrr::map2_dfr(years_chemicals$year, years_chemicals$chemicals,
chemical_codes) %>% unique()
df <- df %>%
dplyr::filter(chem_code %in% chem_df$chem_code) %>%
dplyr::left_join(chem_df, by = "chem_code") %>%
dplyr::select(-chemical) %>%
dplyr::mutate(applic_dt = lubridate::mdy(applic_dt))
# chemicals
if (nrow(df) == 0) {
if (length(chemicals) == 1) {
chem_message <- paste0(chemicals)
} else if (length(chemicals) == 2) {
chem_message <- paste0(chemicals[1], " or ", chemicals[2])
} else if (length(chemicals) > 2) {
chems_vec <- chemicals[1:length(chemicals)-1]
chems_vec <- paste(chems_vec, collapse = ", ")
chem_message <- paste0(chems_vec, ", or ", chemicals[length(chemicals)])
}
# years
if (length(years) == 1) {
year_message <- years
} else if (length(years) == 2) {
year_message <- paste0(years[1], " or ", years[2])
} else if (length(years) > 1) {
years_list <- split(years, cumsum(c(1, diff(years) != 1)))
if (length(years_list) == 1) {
year_message <- paste0(years[1], " through ", years[length(years)])
} else {
years_vec <- years[1:length(years)-1]
years_vec <- paste(years_vec, collapse = ", ")
year_message <- paste0(years_vec, ", or ", years[length(years)])
}
}
# counties
##
code_df <- purexposure::county_codes
test <- suppressWarnings(as.numeric(counties))
order <- data.frame(counties = counties, order = 1:length(counties))
names <- counties[grep(TRUE, is.na(test))]
if (length(names) != 0) {
for (k in 1:length(names)) {
s <- strsplit(names[k], " ")[[1]]
county_name <- paste(toupper(substring(s, 1,1)), substring(s, 2),
sep = "", collapse = " ")
order_df <- data.frame(counties = names[k], name_clean = county_name)
if (k == 1) {
county_name_out <- county_name
order_df_out <- order_df
} else {
county_name_out <- c(county_name_out, county_name)
order_df_out <- rbind(order_df_out, order_df)
}
}
}
codes <- counties[grep(FALSE, is.na(test))]
if (length(codes) != 0) {
for (l in 1:length(codes)) {
county_name2 <- as.character(code_df %>%
dplyr::filter(county_code == codes[l]) %>%
dplyr::select(county_name))
county_name2 <- tolower(county_name2)
s2 <- strsplit(county_name2, " ")[[1]]
county_name2 <- paste(toupper(substring(s2, 1,1)), substring(s2, 2),
sep = "", collapse = " ")
order_df2 <- data.frame(counties = codes[l], name_clean = county_name2)
if (l == 1) {
county_name_out2 <- county_name2
order_df_out2 <- order_df2
} else {
county_name_out2 <- c(county_name_out2, county_name2)
order_df_out2 <- rbind(order_df_out2, order_df2)
}
}
}
if (length(names) != 0 & length(codes) != 0) {
order_df <- rbind(order_df_out, order_df_out2)
} else if (length(names) != 0 & length(codes) == 0) {
order_df <- order_df_out
} else if (length(names) == 0 & length(codes) != 0) {
order_df <- order_df_out2
}
order_df_full <- suppressWarnings(dplyr::full_join(order_df, order,
by = "counties") %>%
dplyr::arrange(order))
names_clean <- as.character(order_df_full$name_clean)
##
if (length(names_clean) == 1) {
county_message <- paste0(names_clean, " county.")
} else if (length(names_clean) == 2) {
county_message <- paste0(names_clean[1], " or ", names_clean[2],
" counties.")
} else if (length(names_clean) > 2) {
counties_vec <- names_clean[1:length(names_clean)-1]
counties_vec <- paste(counties_vec, collapse = ", ")
county_message <- paste0(counties_vec, ", or ",
names_clean[length(names_clean)], " counties.")
}
stop(paste0("There weren't any pesticides containing ", chem_message,
" applied in ", year_message, " in ", county_message))
}
} else if ("all" %in% chemicals) {
chem_df <- purexposure::chemical_list
out_chem_list <- list()
for (i in 1:length(years)) {
chem_year <- chem_df[[as.character(years[i])]]
chem_year <- chem_year %>% mutate(year = as.character(years[i]))
out_chem_list[[i]] <- chem_year
}
out_chem_df <- dplyr::bind_rows(out_chem_list)
df <- df %>% mutate(applic_dt = lubridate::mdy(applic_dt),
year = lubridate::year(applic_dt),
year = as.character(year)) %>%
left_join(out_chem_df, by = c("chem_code", "year"))
}
df2 <- calc_max %>%
dplyr::select(chem_code, calc_max) %>%
dplyr::right_join(df, by = "chem_code") %>%
dplyr::mutate(outlier = ifelse((!is.na(calc_max) &
lbs_per_acre > calc_max), TRUE, FALSE),
lbs_chm_used = ifelse(lbs_per_acre > calc_max,
calc_max*acre_treated, lbs_chm_used)) %>%
dplyr::rename(county_code = county_cd)
county <- purexposure::county_codes
out <- county %>%
dplyr::right_join(df2, by = "county_code") %>%
dplyr::mutate(use_no = paste0(use_no, "_", lubridate::year(applic_dt)),
kg_chm_used = lbs_chm_used/2.20562) %>%
dplyr::select(chem_code, chemname, kg_chm_used, MTRS, MTR, county_name,
county_code, applic_dt, aer_gnd_ind, use_no, outlier) %>%
dplyr::rename(section = MTRS,
township = MTR,
date = applic_dt,
aerial_ground = aer_gnd_ind) %>%
dplyr::arrange(date, county_name)
# missing section and township IDs
missing_sections <- grep("\\?", out$section, value = TRUE)
missing_townships <- grep("\\?", out$township, value = TRUE)
if (length(missing_sections) != 0) {
out <- out %>% dplyr::mutate(section = ifelse(section %in% missing_sections,
NA, section))
}
if (length(missing_townships) != 0) {
out <- out %>% dplyr::mutate(township = ifelse(township %in% missing_sections,
NA, township))
}
if (sum_application) {
section_townships <- out %>% dplyr::select(section, township) %>%
unique()
if (sum_by == "active_ingredient") {
if (unit == "section") {
if (include_ag) {
#1
out <- out %>%
dplyr::group_by(chem_code, chemname, section, county_name, county_code,
date, aerial_ground) %>%
dplyr::summarise(kg_chm_used = sum(kg_chm_used, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::left_join(section_townships, by = "section") %>%
dplyr::arrange(date, county_name, county_code, chemname, chem_code,
township) %>%
dplyr::select(chem_code, chemname, kg_chm_used, section, township,
county_name, county_code, date, aerial_ground)
} else {
#2
out <- out %>%
dplyr::group_by(chem_code, chemname, section, county_name, county_code,
date) %>%
dplyr::summarise(kg_chm_used = sum(kg_chm_used, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::left_join(section_townships, by = "section") %>%
dplyr::arrange(date, county_name, county_code, chemname, chem_code,
township) %>%
dplyr::select(chem_code, chemname, kg_chm_used, section, township,
county_name, county_code, date)
}
} else if (unit == "township") {
if (include_ag) {
#3
out <- out %>%
dplyr::group_by(chem_code, chemname, township, county_name, county_code,
date, aerial_ground) %>%
dplyr::summarise(kg_chm_used = sum(kg_chm_used, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::arrange(date, county_name, county_code, chemname, chem_code,
township) %>%
dplyr::select(chem_code, chemname, kg_chm_used, township,
county_name, county_code, date, aerial_ground)
} else {
#4
out <- out %>%
dplyr::group_by(chem_code, chemname, township, county_name, county_code,
date) %>%
dplyr::summarise(kg_chm_used = sum(kg_chm_used, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::arrange(date, county_name, county_code, chemname, chem_code,
township) %>%
dplyr::select(chem_code, chemname, kg_chm_used, township,
county_name, county_code, date)
}
}
} else if (sum_by == "chemical_class") {
## error handling for chemical_class df
if (!is.null(chemical_class) & !is.data.frame(chemical_class)) {
stop("The chemical_class argument should be a data frame.")
}
if (!is.null(chemical_class) & is.data.frame(chemical_class) &
!all(colnames(chemical_class) == c("chem_code", "chemname", "chemical_class"))) {
stop(writeLines(paste0("The data frame entered in the chemical class ",
"argument should have three columns named chem_code, ",
"chemname, and chemical_class.")))
}
if (!is.null(chemical_class) & is.data.frame(chemical_class) &
all(colnames(chemical_class) == c("chem_code", "chemname", "chemical_class")) &
!is.integer(chemical_class$chem_code)) {
stop("The chem_code column should have integer values.")
}
if (!is.null(chemical_class) & is.data.frame(chemical_class) &
all(colnames(chemical_class) == c("chem_code", "chemname", "chemical_class")) &
!is.character(chemical_class$chemname)) {
stop("The chemname column should have character values.")
}
if (!is.null(chemical_class) & is.data.frame(chemical_class) &
all(colnames(chemical_class) == c("chem_code", "chemname", "chemical_class")) &
!is.character(chemical_class$chemical_class)) {
stop("The chemical_class column should have character values.")
}
if (unit == "section") {
if (include_ag) {
#5
out <- out %>%
dplyr::left_join(chemical_class, by = c("chem_code", "chemname")) %>%
dplyr::mutate(chemical_class = ifelse(is.na(chemical_class), "other",
chemical_class)) %>%
dplyr::group_by(chemical_class, section, county_name, county_code,
date, aerial_ground) %>%
dplyr::summarise(kg_chm_used = sum(kg_chm_used, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::left_join(section_townships, by = "section") %>%
dplyr::arrange(date, county_name, county_code, chemical_class,
township) %>%
dplyr::select(chemical_class, kg_chm_used, section, township,
county_name, county_code, date, aerial_ground)
} else {
#6
out <- out %>%
dplyr::left_join(chemical_class, by = c("chem_code", "chemname")) %>%
dplyr::mutate(chemical_class = ifelse(is.na(chemical_class), "other",
chemical_class)) %>%
dplyr::group_by(chemical_class, section, county_name, county_code,
date) %>%
dplyr::summarise(kg_chm_used = sum(kg_chm_used, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::left_join(section_townships, by = "section") %>%
dplyr::arrange(date, county_name, county_code, chemical_class,
township) %>%
dplyr::select(chemical_class, kg_chm_used, section, township,
county_name, county_code, date)
}
} else if (unit == "township") {
if (include_ag) {
#7
out <- out %>%
dplyr::left_join(chemical_class, by = c("chem_code", "chemname")) %>%
dplyr::mutate(chemical_class = ifelse(is.na(chemical_class), "other",
chemical_class)) %>%
dplyr::group_by(chemical_class, township, county_name, county_code,
date, aerial_ground) %>%
dplyr::summarise(kg_chm_used = sum(kg_chm_used, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::arrange(date, county_name, county_code, chemical_class,
township) %>%
dplyr::select(chemical_class, kg_chm_used, township,
county_name, county_code, date, aerial_ground)
} else {
#8
out <- out %>%
dplyr::left_join(chemical_class, by = c("chem_code", "chemname")) %>%
dplyr::mutate(chemical_class = ifelse(is.na(chemical_class), "other",
chemical_class)) %>%
dplyr::group_by(chemical_class, township, county_name, county_code,
date) %>%
dplyr::summarise(kg_chm_used = sum(kg_chm_used, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::arrange(date, county_name, county_code, chemical_class,
township) %>%
dplyr::select(chemical_class, kg_chm_used, township,
county_name, county_code, date)
}
}
}
}
return(out)
}
purexposure::county_codes
as.data.frame(purexposure::county_codes)
years <- "all"
pull_pur_file
year <- 2015
current_dir <- getwd()
url <- paste0("ftp://transfer.cdpr.ca.gov/pub/outgoing/pur_archives/pur",
year, ".zip")
file <- paste0("pur", year, ".zip")
dir <- tempdir()
setwd(dir)
if (download_progress) {
quiet <- FALSE
} else {
quiet <- TRUE
}
download.file(url, destfile = file, mode = "wb", quiet = quiet)
unzip(file, exdir = dir)
list.files()
sm_year <- substr(year, 3, 4)
?grep
grep(paste0("udc", sm_year, "_"), list.files())
grep(paste0("udc", sm_year, "_"), list.files(), value = TRUE)
if (!"all" %in% counties) {
codes <- find_county_codes(counties)
read_in_counties <- function(code) {
raw_data <- suppressWarnings(suppressMessages(
readr::read_csv(paste0("udc", sm_year, "_", code, ".txt"))
))
raw_data <- dplyr::mutate_all(raw_data, as.character)
return(raw_data)
}
counties_in_year <- purrr::map_dfr(codes, read_in_counties) %>%
arrange(applic_dt, county_cd)
} else {
files <- grep(paste0("udc", sm_year, "_"), list.files(), value = TRUE)
read_in_counties2 <- function(file) {
raw_data <- suppressWarnings(suppressMessages(
readr::read_csv(file)
))
raw_data <- dplyr::mutate_all(raw_data, as.character)
return(raw_data)
}
counties_in_year <- purrr::map_dfr(files, read_in_counties2) %>%
arrange(applic_dt, county_cd)
}
head(counties_in_year)
unique(counties_in_year$county_cd)
counties
counties <- "all"
if (!"all" %in% counties) {
codes <- find_county_codes(counties)
read_in_counties <- function(code) {
raw_data <- suppressWarnings(suppressMessages(
readr::read_csv(paste0("udc", sm_year, "_", code, ".txt"))
))
raw_data <- dplyr::mutate_all(raw_data, as.character)
return(raw_data)
}
counties_in_year <- purrr::map_dfr(codes, read_in_counties) %>%
arrange(applic_dt, county_cd)
} else {
files <- grep(paste0("udc", sm_year, "_"), list.files(), value = TRUE)
read_in_counties2 <- function(file) {
raw_data <- suppressWarnings(suppressMessages(
readr::read_csv(file)
))
raw_data <- dplyr::mutate_all(raw_data, as.character)
return(raw_data)
}
counties_in_year <- purrr::map_dfr(files, read_in_counties2) %>%
arrange(applic_dt, county_cd)
}
unique(counties_in_year$county_cd)
source('~/Documents/purexposure/R/pull_pur.R', echo=TRUE)
years
?map
years <- "2000"
years <- 2000
raw_df <- purrr::map_dfr(years, pull_pur_file, counties = "all",
download_progress = download_progress)
unique(raw_df$county_cd)
as.data.frame(purexposure::county_codes)
chemical_class
unique(chemical_class$chemical_class)
source('~/Documents/purexposure/R/clean_pur.R', echo=TRUE)
chemical_class <- rbind(chemical_codes(2000, "methylene"),
chemical_codes(2000, "aldehyde")) %>%
dplyr::rename(chemical_class = chemical)
df4 <- pur_data(1995, counties = "fresno", chemicals = chemical_class$chemname,
sum_application = TRUE, sum_by = "chemical_class",
chemical_class = chemical_class)
df4
devtools::document()
getwd()
current_dir
setwd(current_dir)
getwd()
devtools::document()
?pur_data
?purexposure
source('~/Documents/purexposure/R/pull.R', echo=TRUE)
source('~/Documents/purexposure/R/pull.R', echo=TRUE)
library(purexposure)
?purexposure
devtools::document()
?purexposure
devtools::document()
?purexposure
devtools::document()
?purexposure
devtools::document()
devtools::document()
devtools::document()
devtools::document()
