} else {
out <- list(map = plot, data = pur_df3)
}
return(out)
}
fresno_list <- purexposure::fresno_ex %>%
plot_county_application(spdf = fresno_spdf)
names(fresno_list)
fresno_list$map
products_2000 <- pull_product_table(2000)
usethis::use_data(products_2000, overwrite = TRUE)
# fresno pur raw
fresno_ex_raw <- pull_raw_pur(2000, "fresno")
usethis::use_data(fresno_ex_raw, overwrite = TRUE)
fresno_ex_raw <- fresno_ex_raw %>%
dplyr::filter(date >= lubridate::ymd("2000-01-01") &
date <= lubridate::ymd("2000-01-31"))
# fresno pur raw
fresno_ex_raw <- pull_raw_pur(2000, "fresno")
fresno_ex_raw <- fresno_ex_raw %>%
dplyr::filter(date >= lubridate::ymd("2000-01-01") &
date <= lubridate::ymd("2000-01-31"))
head(fresno_ex_raw)
head(fresno_ex_raw$applic_dt)
class(fresno_ex_raw$applic_dt)
fresno_ex_raw <- fresno_ex_raw %>%
dplyr::mutate(applic_dt = lubridate::ymd(applic_dt)) %>%
dplyr::filter(date >= lubridate::ymd("2000-01-01") &
date <= lubridate::ymd("2000-01-31")) %>%
dplyr::mutate(applic_dt = as.character(applic_dt))
fresno_ex_raw %>%
dplyr::mutate(applic_dt = lubridate::ymd(applic_dt))
fresno_ex_raw %>%
dplyr::mutate(applic_dt = lubridate::ymd(applic_dt)) %>%
dplyr::filter(date >= lubridate::ymd("2000-01-01") &
date <= lubridate::ymd("2000-01-31"))
fresno_ex_raw <- fresno_ex_raw %>%
dplyr::mutate(applic_dt = lubridate::ymd(applic_dt))
head(fresno_ex_raw$applic_dt)
class(fresno_ex_raw$applic_dt)
unique(fresno_ex_raw$applic_dt)
# fresno pur raw
fresno_ex_raw <- pull_raw_pur(2000, "fresno")
fresno_ex_raw <- fresno_ex_raw %>%
dplyr::mutate(applic_dt = lubridate::ymd(applic_dt)) %>%
dplyr::filter(applic_dt >= lubridate::ymd("2000-01-01") &
applic_dt <= lubridate::ymd("2000-01-31")) %>%
dplyr::mutate(applic_dt = as.character(applic_dt))
usethis::use_data(fresno_ex_raw, overwrite = TRUE)
nrow(fresno_ex_raw)
ncol(fresno_ex_raw)
tail(fresno_ex_raw$applic_dt)
fresno_raw <- pull_raw_pur(2000, "fresno")
fresno_raw <- fresno_raw %>%
dplyr::mutate(applic_dt = lubridate::ymd(applic_dt)) %>%
dplyr::filter(applic_dt >= lubridate::ymd("2000-01-01") &
applic_dt <= lubridate::ymd("2000-01-31")) %>%
dplyr::mutate(applic_dt = as.character(applic_dt))
usethis::use_data(fresno_raw, overwrite = TRUE)
# fesno pur clean
fresno_clean <- pull_clean_pur(2000, "fresno")
fresno_clean <- fresno_clean %>%
dplyr::filter(date >= lubridate::ymd("2000-01-01") &
date <= lubridate::ymd("2000-01-31"))
usethis::use_data(fresno_clean, overwrite = TRUE)
product_df <- purexposure::products_2000
devtools::document()
product_df <- purexposure::products_2000
#'   Included if `by_year` is set to TRUE.}
#' }
#'
#' @examples
#' product_df <- purexposure::products_2000
#' prod_df <- find_product_name(2000, "mosquito", product_df = product_df)
#' \donttest{
#' prod_df2 <- find_product_name(2010, c("insecticide", "rodenticide"))
#' }
#' @export
find_product_name <- function(years, products = "all", quiet = FALSE,
by_year = FALSE, ...) {
args <- list(...)
if (is.null(args$product_df)) {
prod_df <- pull_product_table(years, quiet = quiet)
} else {
prod_df <- product_df
}
for (i in 1:length(products)) {
df <- help_find_product(products[i], prod_df)
if (i == 1) {
out <- df
} else {
out <- rbind(out, df)
}
}
out <- unique(out) %>% dplyr::select(1:4, product, year)
if (!by_year) {
out <- out %>% dplyr::select(-year) %>% unique()
}
return(out)
}
prod_df <- find_product_name(2000, "mosquito", product_df = product_df)
prod_df
devtools::document()
?find_product_name
find_counties(c("01", "06005", "el dorado"), return = "fips_codes")
find_counties(c("01", "06005", "el dorado"), return = "names")
plot_locations_exposure(purexposure::exposure_ex$exposure)
purexposure::exposure_ex$exposure
rbind(purexposure::exposure_ex$exposure,
purexposure::exposure_ex2$exposure)
devtools::document()
?write_exposure
pur <- purexposure::fresno_clean
spdf <- purexposure::fresno_spdf
df <- data.frame(location = "-119.726751, 36.660967",
start_date = "2000-01-01",
end_date = "2000-12-31")
temp <- tempdir()
write_exposure(pur, df, 3000, temp, spdf = spdf)
devtools::document()
write_exposure(pur, df, 3000, temp, spdf = spdf)
devtools::document()
?pull_product_table
df <- products_2000
dim(df)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
fresno <- purexposure::fresno_spdf
fresno %>% spdf_to_df %>% df_plot()
devtools::document()
#'
#' plot_list <- plot_county_locations(c("san bernardino", "ventura"),
#'                                    separate_plots = TRUE)
#' names(plot_list)
#' plot_list[[1]]
#' plot_list[[2]]
#' }
#' @importFrom magrittr %>%
#' @importFrom rlang !!
#' @export
plot_county_locations <- function(counties_or_df, separate_plots = FALSE,
fill_color = "red", alpha = 0.5, ...) {
ca_shp <- purexposure::california_shp
ca_df <- spdf_to_df(ca_shp)
if (!is.vector(counties_or_df) & !is.data.frame(counties_or_df)) { #overkill
stop(paste0("The counties_or_df argument should be either a character",
" vector of county names or codes or a PUR data frame."))
}
if (is.vector(counties_or_df)) {
counties <- find_counties(counties_or_df, return = "names")
}
if (is.data.frame(counties_or_df)) {
check <- any(c("county_cd", "county_name", "pur_code", "fips_code") %in%
colnames(counties_or_df))
if (!check) {
stop(paste0("The counties_or_df data frame should have either a county_cd,",
" county_name, pur_code, or fips_code column.\nThis data",
" frame should be returned from either pull_pur_file(),",
" pull_raw_pur(), or pull_clean_pur()."))
}
county_col <- grep("county_cd", colnames(counties_or_df), value = TRUE)
if (length(county_col) == 0) {
county_col <- grep("county_name", colnames(counties_or_df), value = TRUE)
if (length(county_col) == 0) {
county_col <- grep("pur_code", colnames(counties_or_df), value = TRUE)
if (length(county_col) == 0) {
county_col <- grep("fips_code", colnames(counties_or_df), value = TRUE)
}
}
}
counties <- counties_or_df %>%
dplyr::select(!!county_col) %>%
unique() %>%
tibble_to_vector()
}
# pull county shapefiles
args <- list(...)
if (is.null(args$spdf)) {
county_shps <- purrr::map(counties, pull_spdf)
county_dfs <- suppressWarnings(purrr::map(county_shps, spdf_to_df))
} else {
county_dfs <- list(args$spdf %>% spdf_to_df)
}
ca <- df_plot(ca_df)
plot <- ca + ggplot2::geom_polygon(data = county_dfs[[1]],
ggplot2::aes(x = long, y = lat, group = group),
color = "transparent", fill = fill_color, alpha =
alpha)
if (separate_plots) {
if (length(counties) > 1) {
out <- list()
out[[1]] <- plot
for (i in utils::tail(1:length(counties), -1)) {
out[[i]] <- ca + ggplot2::geom_polygon(data = county_dfs[[i]],
ggplot2::aes(x = long, y = lat, group = group),
color = "transparent", fill = fill_color, alpha =
alpha)
}
names(out) <- counties
} else {
out <- plot
}
} else {
if (length(county_dfs) > 1) {
for (i in utils::tail(1:length(counties), -1)) {
plot <- plot + ggplot2::geom_polygon(data = county_dfs[[i]],
ggplot2::aes(x = long, y = lat, group = group),
color = "transparent", fill = fill_color, alpha =
alpha)
out <- plot
}
} else {
out <- plot
}
}
return(out)
}
fresno_spdf <- purexposure::fresno_spdf
plot_county_locations("fresno", spdf = fresno_spdf)}
plot_county_locations("fresno", spdf = fresno_spdf)
devtools::document()
?plot_county_locations
plot_list <- plot_county_locations(c("san bernardino", "ventura"),
separate_plots = TRUE)
devtools::document()
devtools::document()
toy <- data.frame(x = 1:10, y = as.character(c(11:20)))
toy
str(toy)
toy %>% dplyr::filter(x %in% c(1:5), y %in% c("11", "12"))
toy %>% dplyr::filter(x %in% c(1:5) & y %in% c("11", "12"))
toy %>% dplyr::filter(x %in% c(1:5) | y %in% c("11", "12"))
dir.create("inst")
dir.create("inst/extdata")
# fresno pur raw
fresno_raw <- pull_raw_pur(2000, "fresno")
fresno_raw <- fresno_raw %>%
dplyr::mutate(applic_dt = lubridate::ymd(applic_dt)) %>%
dplyr::filter(applic_dt >= lubridate::ymd("2000-01-01") &
applic_dt <= lubridate::ymd("2000-01-31")) %>%
dplyr::mutate(applic_dt = as.character(applic_dt))
saveRDS(fresno_raw, file = "inst/extdata/fresno_raw.rds")
# fesno pur clean
fresno_clean <- pull_clean_pur(2000, "fresno")
fresno_clean <- fresno_clean %>%
dplyr::filter(date >= lubridate::ymd("2000-01-01") &
date <= lubridate::ymd("2000-01-31"))
saveRDS(fresno_clean, file = "inst/extdata/fresno_clean.rds")
exposure_ex <- purexposure::fresno_clean %>%
calculate_exposure(location = "-119.726751, 36.660967", radius = 3000)
exposure_ex$county_plot <- NULL
saveRDS(exposure_ex, file = "inst/extdata/exposure_ex")
# fresno exposure #2
exposure_ex2 <- fresno_clean %>%
calculate_exposure(location = "-119.247100, 37.204875", radius = 3000)
saveRDS(exposure_ex, file = "inst/extdata/exposure_ex.rds")
exposure_ex2$county_plot <- NULL
saveRDS(exposure_ex2, file = "inst/extdata/exposure_ex2.rds")
# fresno spdf
fresno_spdf <- pull_spdf("fresno")
saveRDS(fresno_spdf, file = "inst/extdata/fresno_spdf.rds")
# products table for 2000
products_2000 <- pull_product_table(2000)
saveRDS(products_2000, file = "inst/extdata/products_2000.rds")
devtools::document()
devtools::document()
system.file("extdata", "fresno_clean.rds",
package = "purexposure")
# fresno exposure #1
fresno_clean <- readRDS(system.file("extdata", "fresno_clean.rds",
package = "purexposure"))
fresno_clean
devtools::document()
fresno_spdf <- readRDS(system.file("extdata", "fresno_spdf.rds",
package = "purexposure))
fresno_spdf <- readRDS(system.file("extdata", "fresno_spdf.rds",
package = "purexposure))
devtools::document()
spdf <- readRDS(system.file("extdata", "fresno_spdf.rds", package = "purexposure"))
exp1 <- readRDS(system.file("extdata", "exposure_ex.rds", package = "purexposure"))
exp2 <- readRDS(system.file("extdata", "exposure_ex2.rds", package = "purexposure"))
exposure_df <- rbind(exp1, exp2)
exposure_df
readRDS(system.file("extdata", "exposure_ex2.rds", package = "purexposure"))
spdf <- readRDS(system.file("extdata", "fresno_spdf.rds", package = "purexposure"))
exp1 <- readRDS(system.file("extdata", "exposure_ex.rds", package = "purexposure"))$exposure
exp2 <- readRDS(system.file("extdata", "exposure_ex2.rds", package = "purexposure"))$exposure
exposure_df <- rbind(exp1, exp2)
plot_locations_exposure(exposure_df, spdf = spdf)}
plot_locations_exposure(exposure_df, spdf = spdf)
devtools::document()
devtools::document()
codes <- purexposure::county_codes
codes
library(countyweather)
?daily_fips
library(devtools)
check()
shp <- purexposure::california_shp
plot(shp)
shp %>% purexposure::spdf_to_df() %>% purexposure::df_plot()
library(magrittr)
shp %>% purexposure::spdf_to_df() %>% purexposure::df_plot()
devtools::document()
build()
devtools::buidl()
devtools::build()
install.packages("devtools")
install.packages("devtools")
sessionInfo()
library(devtools)
library(devtools)
sessionInfo()
any(grepl("^\\.Renviron", list.files("~", all.files = TRUE)))
system("open ~/.Renviron")
c(4240.00,6207.00)*12
library(devtools)
build()
address <- "13883 Lassen Ave, Helm, CA 93627"
long_lat <- c("-120.09789, 36.53379")
find_location_county(c(address, long_lat))
library(purexposure)
find_location_county(c(address, long_lat))
devtools::build()
start <- Sys.time()
clean_pur <- readRDS(system.file("extdata", "fresno_clean.rds",
package = "purexposure"))
fresno_spdf <- readRDS(system.file("extdata", "fresno_spdf.rds",
package = "purexposure"))
exposure_list <- calculate_exposure(clean_pur, location = "-120.098794, 36.532866",
radius = 3000, spdf = fresno_spdf)
end <- Sys.time()
end-start
system.file("extdata", "fresno_clean.rds",
package = "purexposure")
clean_pur <- readRDS("inst/extdata/fresno_clean.rds")
fresno_spdf <- readRDS("inst/extdata/fresno_spdf.rds")
exposure_list <- calculate_exposure(clean_pur, location = "-120.098794, 36.532866",
radius = 3000, spdf = fresno_spdf)
start <- Sys.time()
clean_pur <- readRDS("inst/extdata/fresno_clean.rds")
fresno_spdf <- readRDS("inst/extdata/fresno_spdf.rds")
exposure_list <- calculate_exposure(clean_pur, location = "-120.098794, 36.532866",
radius = 3000, spdf = fresno_spdf)
end <- Sys.time()
end-start
purexposure_package_env$pur_lst
start <- Sys.time()
spdf <- readRDS(system.file("extdata", "fresno_spdf.rds", package = "purexposure"))
pur <- readRDS(system.file("extdata", "fresno_clean.rds", package = "purexposure"))
df <- data.frame(location = "-119.726751, 36.660967",
start_date = "2000-01-01",
end_date = "2000-12-31")
temp <- tempdir()
write_exposure(pur, df, 3000, temp, spdf = spdf)
end <- Sys.time()
end-start
start <- Sys.time()
spdf <- readRDS("inst/extdata/fresno_spdf.rds")
pur <- readRDS("inst/extdata/fresno_clean.rds")
df <- data.frame(location = "-119.726751, 36.660967",
start_date = "2000-01-01",
end_date = "2000-12-31")
temp <- tempdir()
write_exposure(pur, df, 3000, temp, spdf = spdf)
end <- Sys.time()
end-start
start <- Sys.time()
fresno_spdf <- readRDS("inst/extdata/fresno_spdf.rds")
plot_county_locations("fresno", spdf = fresno_spdf)
end <- Sys.time()
end-start
# df_plot
fresno <- readRDS("inst/extdata/fresno_spdf.rds")
fresno %>% spdf_to_df %>% df_plot()}
fresno %>% spdf_to_df %>% df_plot()
library(dplyr
)
fresno %>% spdf_to_df %>% df_plot()
devtools::build()
devtools::document()
devtools::build()
fresno_list <- readRDS(system.file("extdata", "exposure_ex.rds",
package = "purexposure")) %>% plot_exposure()
fresno_list
devtools::document9)
devtools::document()
build()
fresno_spdf <- pull_spdf("fresno")
saveRDS(fresno_spdf, file = "inst/extdata/fresno_spdf.rds")
devtools::build()
devtools::build()
devtools::document()
devtools::build()
df <- readRDS("~/Downloads/exposure_dataset.rds")
head(df)
length(unique(df$id))
unique(df$pollutant)
df <- readRDS("~/Downloads/locations_dates_id.rds")
head(df)
df <- df %>% select(-ID)
library(dplyr)
df <- df %>% select(-ID)
df
locations_dates_df <- df
locations <- as.character(unique(locations_dates_df$location))
locations
for (i in 1:length(locations)) {
if (length(grep("-", locations[i])) == 1) {
latlon <- locations[i]
latlon_vec <- as.numeric(as.vector(sapply(unlist(strsplit(latlon, ",")),
stringr::str_trim)))
address_x <- latlon_vec[1]
address_y <- latlon_vec[2]
latlon_out <- latlon_vec
} else {
address <- locations[i]
latlon_df <- help_geocode(address)
address_x <- latlon_df$lon
address_y <- latlon_df$lat
latlon_out <- as.numeric(c(address_x, address_y))
}
latlon_ch <- paste0(latlon_out[1], ", ", latlon_out[2])
if (i == 1) {
latlon <- latlon_ch
} else {
latlon <- c(latlon, latlon_ch)
}
}
loc_df <- data.frame(location = unique(locations_dates_df$location),
latlon_loc = latlon)
latlon
length(locations)
length(grep("-", locations[i])) == 1
i
i <- 1
locations
i
latlon <- locations[i]
latlon
latlon_vec <- as.numeric(as.vector(sapply(unlist(strsplit(latlon, ",")),
stringr::str_trim)))
latlon_vec
address_x <- latlon_vec[1]
address_y <- latlon_vec[2]
latlon_out <- latlon_vec
latlon_out
latlon_ch <- paste0(latlon_out[1], ", ", latlon_out[2])
latlon_ch
for (i in 1:length(locations)) {
if (length(grep("-", locations[i])) == 1) {
latlon <- locations[i]
latlon_vec <- as.numeric(as.vector(sapply(unlist(strsplit(latlon, ",")),
stringr::str_trim)))
address_x <- latlon_vec[1]
address_y <- latlon_vec[2]
latlon_out <- latlon_vec
} else {
address <- locations[i]
latlon_df <- help_geocode(address)
address_x <- latlon_df$lon
address_y <- latlon_df$lat
latlon_out <- as.numeric(c(address_x, address_y))
}
latlon_ch <- paste0(latlon_out[1], ", ", latlon_out[2])
if (i == 1) {
latlon <- latlon_ch
} else {
latlon <- c(latlon, latlon_ch)
}
}
latlon
locations
list.files("~/Desktop")
df <- readRDS("~/Desktop/summary_non_missing_data.rds")
head(df)
class(df)
locations_dates_df
locations <- as.character(locations_dates_df$location)
for (i in 1:length(locations)) {
if (length(grep("-", locations[i])) == 1) {
latlon <- locations[i]
latlon_vec <- as.numeric(as.vector(sapply(unlist(strsplit(latlon, ",")),
stringr::str_trim)))
address_x <- latlon_vec[1]
address_y <- latlon_vec[2]
latlon_out <- latlon_vec
} else {
address <- locations[i]
latlon_df <- help_geocode(address)
address_x <- latlon_df$lon
address_y <- latlon_df$lat
latlon_out <- as.numeric(c(address_x, address_y))
}
latlon_ch <- paste0(latlon_out[1], ", ", latlon_out[2])
if (i == 1) {
latlon <- latlon_ch
} else {
latlon <- c(latlon, latlon_ch)
}
}
loc_df <- data.frame(location = unique(locations_dates_df$location),
latlon_loc = latlon)
latlon
class(df)
names(df)
df$continuous_summary
class(df$continuous_summary)
df$continuous_summary[1,]
df$continuous_summary[1,1]
