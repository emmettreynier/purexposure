area = buffer_area,
none_recorded = FALSE) %>%
dplyr::select(location, township, percent, kg, kg_int,
start_date, end_date, radius, chemicals, area,
none_recorded)
test_vec <- unique(clean_pur_df$chemical_class) %in% unique(exp$chemicals)
test <- all(test_vec)
if(!test) {
missing_classes <- unique(clean_pur_df$chemical_class)[!test_vec]
df_to_add <- data.frame(location = rep(location, length(missing_classes)),
township = rep(NA, length(missing_classes)),
percent = rep(NA, length(missing_classes)),
kg = rep(0, length(missing_classes)),
kg_int = rep(NA, length(missing_classes)),
start_date = rep(start_date, length(missing_classes)),
end_date = rep(end_date, length(missing_classes)),
radius = rep(radius, length(missing_classes)),
chemicals = missing_classes,
area = rep(buffer_area, length(missing_classes)),
none_recorded = rep(none_recorded, length(missing_classes)))
exp <- rbind(exp, df_to_add)
}
exp_out <- exp %>% dplyr::group_by(chemicals) %>%
dplyr::summarise(exposure = sum(kg_int, na.rm = TRUE) / buffer_area)
row_out <- data.frame(exposure = exp_out$exposure,
location = rep(location, nrow(exp_out)),
start_date = rep(start_date, nrow(exp_out)),
end_date = rep(end_date, nrow(exp_out)),
radius = rep(radius, nrow(exp_out)),
chemicals = exp_out$chemicals) %>%
dplyr::mutate(none_recorded = ifelse(exposure == 0, TRUE, FALSE))
}
}
nested_df <- list(row_out = row_out, meta_data = list(exp))
attr(nested_df, "row.names") <- as.integer(1)
class(nested_df) <- c("tbl_df", "data.frame")
return(nested_df)
}
for (i in 1:length(section_polys)) {
section_area <- comb_shp_filt@polygons[[i]]@Polygons[[1]]@area
intersection <- rgeos::gIntersection(sp::SpatialPolygons(comb_shp_filt@polygons[i]),
sp::SpatialPolygons(comb_shp_filt@polygons[buffer_poly]))
if (is.null(intersection)) {
intersected_area <- 0
} else {
intersected_area <- rgeos::gArea(intersection)
}
percent_df <- data.frame(MTR = comb_shp_filt@data$MTR[i],
percent = intersected_area/section_area)
if (i == 1) {
out <- percent_df
} else {
out <- rbind(out, percent_df)
}
}
out <- dplyr::filter(out, percent != 0)
comb_shp_filt <- subset(comb_shp_filt, MTR %in% c(as.character(out$MTR),
"buffer"))
suppressMessages(comb_df_filt <- broom::tidy(comb_shp_filt))
comb_df_filt <- dplyr::mutate(comb_df_filt, group = as.character(group))
comb_df_filt <- df_filtered %>%
dplyr::mutate(group = as.character(group)) %>%
dplyr::right_join(comb_df_filt, by = c("long", "lat", "hole", "order",
"piece", "id", "group"))
pur_filt <- dplyr::filter(clean_pur_df, !is.na(kg_chm_used))
if (!any(unique(clean_pur_df$township) %in% mtrs_int)) {
buffer_area <- pi * (radius^2)
exp <- out %>% dplyr::mutate(MTR = as.character(MTR),
kg = 0,
kg_int = 0,
radius = radius,
start_date = time_df$start_date,
end_date = time_df$end_date,
chemicals = chemicals,
area = buffer_area,
location = location,
none_recorded = TRUE) %>%
dplyr::rename(township = MTR) %>%
dplyr::select(location, township, percent, kg, kg_int, start_date,
end_date, radius, chemicals, area, none_recorded)
row_out <- data.frame(exposure = 0,
location = location,
start_date = time_df$start_date,
end_date = time_df$end_date,
radius = radius,
chemicals = chemicals,
none_recorded = TRUE)
} else {
out <- purrr::map2(time_df$start_date, time_df$end_date,
calculate_exposure_bydate)
for (i in 1:length(out)) {
exp_row <- out[[i]]$row_out
meta_data <- out[[i]]$meta_data[[1]]
if (i == 1) {
row_out <- exp_row
meta_out <- meta_data
} else {
row_out <- rbind(row_out, exp_row)
meta_out <- rbind(meta_out, meta_data)
}
}
out <- list(exposure = row_out,
meta_data = meta_out,
buffer_plot = comb_df_filt,
county_plot = context_plot)
}
pur_out <- pur_filt %>%
dplyr::filter(date >= start_date & date <= end_date) %>%
dplyr::group_by(chemical_class, section) %>%
dplyr::summarise(kg = sum(kg_chm_used)) %>%
dplyr::ungroup()
pur_out <- pur_filt %>%
dplyr::filter(date >= start_date & date <= end_date) %>%
dplyr::group_by(chemical_class, township) %>%
dplyr::summarise(kg = sum(kg_chm_used)) %>%
dplyr::ungroup()
buffer_area <- pi * (radius^2)
exp <- out %>%
dplyr::mutate(MTR = as.character(MTR)) %>%
dplyr::rename(township = MTR) %>%
dplyr::left_join(pur_out, by = "township") %>%
dplyr::mutate(kg_int = percent * kg,
location = location,
radius = radius,
start_date = start_date,
end_date = end_date,
chemicals = chemical_class,
area = buffer_area,
none_recorded = FALSE) %>%
dplyr::select(location, township, percent, kg, kg_int,
start_date, end_date, radius, chemicals, area,
none_recorded)
test_vec <- unique(clean_pur_df$chemical_class) %in% unique(exp$chemicals)
test <- all(test_vec)
test
missing_classes <- unique(clean_pur_df$chemical_class)[!test_vec]
missing_classes
df_to_add <- data.frame(location = rep(location, length(missing_classes)),
township = rep(NA, length(missing_classes)),
percent = rep(NA, length(missing_classes)),
kg = rep(0, length(missing_classes)),
kg_int = rep(NA, length(missing_classes)),
start_date = rep(start_date, length(missing_classes)),
end_date = rep(end_date, length(missing_classes)),
radius = rep(radius, length(missing_classes)),
chemicals = missing_classes,
area = rep(buffer_area, length(missing_classes)),
none_recorded = rep(TRUE, length(missing_classes)))
exp <- rbind(exp, df_to_add)
exp
exp_out <- exp %>% dplyr::group_by(chemicals) %>%
dplyr::summarise(exposure = sum(kg_int, na.rm = TRUE) / buffer_area)
row_out <- data.frame(exposure = exp_out$exposure,
location = rep(location, nrow(exp_out)),
start_date = rep(start_date, nrow(exp_out)),
end_date = rep(end_date, nrow(exp_out)),
radius = rep(radius, nrow(exp_out)),
chemicals = exp_out$chemicals) %>%
dplyr::full_join(exp, by = c("chemicals", "none_recorded"))
row_out <- data.frame(exposure = exp_out$exposure,
location = rep(location, nrow(exp_out)),
start_date = rep(start_date, nrow(exp_out)),
end_date = rep(end_date, nrow(exp_out)),
radius = rep(radius, nrow(exp_out)),
chemicals = exp_out$chemicals,
none_recorded = rep(NA, nrow(exp_out))) %>%
dplyr::full_join(exp, by = c("chemicals", "none_recorded"))
data.frame(exposure = exp_out$exposure,
location = rep(location, nrow(exp_out)),
start_date = rep(start_date, nrow(exp_out)),
end_date = rep(end_date, nrow(exp_out)),
radius = rep(radius, nrow(exp_out)),
chemicals = exp_out$chemicals,
none_recorded = rep(NA, nrow(exp_out))) %>%
dplyr::full_join(exp, by = c("chemicals", "none_recorded"))
pur_out <- pur_filt %>%
dplyr::filter(date >= start_date & date <= end_date) %>%
dplyr::group_by(chemical_class, township) %>%
dplyr::summarise(kg = sum(kg_chm_used)) %>%
dplyr::ungroup()
buffer_area <- pi * (radius^2)
exp <- out %>%
dplyr::mutate(MTR = as.character(MTR)) %>%
dplyr::rename(township = MTR) %>%
dplyr::left_join(pur_out, by = "township") %>%
dplyr::mutate(kg_int = percent * kg,
location = location,
radius = radius,
start_date = start_date,
end_date = end_date,
chemicals = chemical_class,
area = buffer_area,
none_recorded = FALSE) %>%
dplyr::select(location, township, percent, kg, kg_int,
start_date, end_date, radius, chemicals, area,
none_recorded)
test_vec <- unique(clean_pur_df$chemical_class) %in% unique(exp$chemicals)
test <- all(test_vec)
if(!test) {
missing_classes <- unique(clean_pur_df$chemical_class)[!test_vec]
df_to_add <- data.frame(location = rep(location, length(missing_classes)),
township = rep(NA, length(missing_classes)),
percent = rep(NA, length(missing_classes)),
kg = rep(0, length(missing_classes)),
kg_int = rep(NA, length(missing_classes)),
start_date = rep(start_date, length(missing_classes)),
end_date = rep(end_date, length(missing_classes)),
radius = rep(radius, length(missing_classes)),
chemicals = missing_classes,
area = rep(buffer_area, length(missing_classes)),
none_recorded = rep(TRUE, length(missing_classes)))
exp <- rbind(exp, df_to_add)
}
exp_out <- exp %>% dplyr::group_by(chemicals) %>%
dplyr::summarise(exposure = sum(kg_int, na.rm = TRUE) / buffer_area)
row_out <- data.frame(exposure = exp_out$exposure,
location = rep(location, nrow(exp_out)),
start_date = rep(start_date, nrow(exp_out)),
end_date = rep(end_date, nrow(exp_out)),
radius = rep(radius, nrow(exp_out)),
chemicals = exp_out$chemicals,
none_recorded = rep(NA, nrow(exp_out))) %>%
dplyr::full_join(exp, by = c("chemicals", "none_recorded"))
row_out
to_join <- exp %>% dplyr::select(chemicals, none_recorded)
data.frame(exposure = exp_out$exposure,
location = rep(location, nrow(exp_out)),
start_date = rep(start_date, nrow(exp_out)),
end_date = rep(end_date, nrow(exp_out)),
radius = rep(radius, nrow(exp_out)),
chemicals = exp_out$chemicals,
none_recorded = rep(NA, nrow(exp_out))) %>%
dplyr::full_join(to_join, by = c("chemicals", "none_recorded"))
to_join
data.frame(exposure = exp_out$exposure,
location = rep(location, nrow(exp_out)),
start_date = rep(start_date, nrow(exp_out)),
end_date = rep(end_date, nrow(exp_out)),
radius = rep(radius, nrow(exp_out)),
chemicals = exp_out$chemicals) %>%
dplyr::full_join(to_join, by = "chemicals")
data.frame(exposure = exp_out$exposure,
location = rep(location, nrow(exp_out)),
start_date = rep(start_date, nrow(exp_out)),
end_date = rep(end_date, nrow(exp_out)),
radius = rep(radius, nrow(exp_out)),
chemicals = exp_out$chemicals)
row_out <- data.frame(exposure = exp_out$exposure,
location = rep(location, nrow(exp_out)),
start_date = rep(start_date, nrow(exp_out)),
end_date = rep(end_date, nrow(exp_out)),
radius = rep(radius, nrow(exp_out)),
chemicals = exp_out$chemicals)
str(row_out)
row_out <- data.frame(exposure = exp_out$exposure,
location = rep(location, nrow(exp_out)),
start_date = rep(start_date, nrow(exp_out)),
end_date = rep(end_date, nrow(exp_out)),
radius = rep(radius, nrow(exp_out)),
chemicals = exp_out$chemicals) %>%
dplyr::mutate(chemicals = as.character(chemicals),
location = as.factor(location)) %>%
dplyr::full_join(to_join, by = "chemicals")
row_out
calculate_exposure_bydate <- function(start_date, end_date) {
if (chemicals == "all") { #all
if ("section" %in% colnames(pur_filt)) {
pur_out <- pur_filt %>%
dplyr::filter(date >= start_date & date <= end_date) %>%
dplyr::group_by(section) %>%
dplyr::summarise(kg = sum(kg_chm_used)) %>%
dplyr::ungroup()
buffer_area <- pi * (radius^2)
exp <- out %>%
dplyr::mutate(MTRS = as.character(MTRS)) %>%
dplyr::rename(section = MTRS) %>%
dplyr::left_join(pur_out, by = "section") %>%
dplyr::mutate(kg_int = percent * kg,
location = location,
radius = radius,
start_date = start_date,
end_date = end_date,
chemicals = chemicals,
area = buffer_area,
none_recorded = FALSE) %>%
dplyr::select(location, section, percent, kg, kg_int,
start_date, end_date, radius, chemicals, area,
none_recorded)
exp_out <- exp %>% dplyr::summarise(exposure =
sum(kg_int, na.rm = TRUE) /
buffer_area)
row_out <- data.frame(exposure = exp_out, location = location,
start_date = start_date,  end_date = end_date,
radius = radius, chemicals = chemicals,
none_recorded = FALSE)
} else {
pur_out <- pur_filt %>%
dplyr::filter(date >= start_date & date <= end_date) %>%
dplyr::group_by(township) %>%
dplyr::summarise(kg = sum(kg_chm_used)) %>%
dplyr::ungroup()
buffer_area <- pi * (radius^2)
exp <- out %>%
dplyr::mutate(MTRS = as.character(MTRS)) %>%
dplyr::rename(township = MTRS) %>%
dplyr::left_join(pur_out, by = "township") %>%
dplyr::mutate(kg_int = percent * kg,
location = location,
radius = radius,
start_date = start_date,
end_date = end_date,
chemicals = chemicals,
area = buffer_area,
none_recorded = FALSE) %>%
dplyr::select(location, township, percent, kg, kg_int,
start_date, end_date, radius, chemicals, area,
none_recorded)
exp_out <- exp %>% dplyr::summarise(exposure =
sum(kg_int, na.rm = TRUE) /
buffer_area)
row_out <- data.frame(exposure = exp_out, location = location,
start_date = start_date,  end_date = end_date,
radius = radius, chemicals = chemicals,
none_recorded = FALSE)
}
} else if (chemicals == "chemical_class") { #chemical_class
if ("section" %in% colnames(pur_filt)) {
pur_out <- pur_filt %>%
dplyr::filter(date >= start_date & date <= end_date) %>%
dplyr::group_by(chemical_class, section) %>%
dplyr::summarise(kg = sum(kg_chm_used)) %>%
dplyr::ungroup()
buffer_area <- pi * (radius^2)
exp <- out %>%
dplyr::mutate(MTRS = as.character(MTRS)) %>%
dplyr::rename(section = MTRS) %>%
dplyr::left_join(pur_out, by = "section") %>%
dplyr::mutate(kg_int = percent * kg,
location = location,
radius = radius,
start_date = start_date,
end_date = end_date,
chemicals = chemical_class,
area = buffer_area,
none_recorded = FALSE) %>%
dplyr::select(location, section, percent, kg, kg_int,
start_date, end_date, radius, chemicals, area,
none_recorded)
test_vec <- unique(clean_pur_df$chemical_class) %in% unique(exp$chemicals)
test <- all(test_vec)
if(!test) {
missing_classes <- unique(clean_pur_df$chemical_class)[!test_vec]
df_to_add <- data.frame(location = rep(location, length(missing_classes)),
section = rep(NA, length(missing_classes)),
percent = rep(NA, length(missing_classes)),
kg = rep(0, length(missing_classes)),
kg_int = rep(NA, length(missing_classes)),
start_date = rep(start_date, length(missing_classes)),
end_date = rep(end_date, length(missing_classes)),
radius = rep(radius, length(missing_classes)),
chemicals = missing_classes,
area = rep(buffer_area, length(missing_classes)),
none_recorded = rep(none_recorded, length(missing_classes)))
exp <- rbind(exp, df_to_add)
}
exp_out <- exp %>% dplyr::group_by(chemicals) %>%
dplyr::summarise(exposure = sum(kg_int, na.rm = TRUE) / buffer_area)
to_join <- exp %>% dplyr::select(chemicals, none_recorded)
row_out <- data.frame(exposure = exp_out$exposure,
location = rep(location, nrow(exp_out)),
start_date = rep(start_date, nrow(exp_out)),
end_date = rep(end_date, nrow(exp_out)),
radius = rep(radius, nrow(exp_out)),
chemicals = exp_out$chemicals) %>%
dplyr::mutate(chemicals = as.character(chemicals),
location = as.factor(location)) %>%
dplyr::full_join(to_join, by = "chemicals")
} else {
pur_out <- pur_filt %>%
dplyr::filter(date >= start_date & date <= end_date) %>%
dplyr::group_by(chemical_class, township) %>%
dplyr::summarise(kg = sum(kg_chm_used)) %>%
dplyr::ungroup()
buffer_area <- pi * (radius^2)
exp <- out %>%
dplyr::mutate(MTR = as.character(MTR)) %>%
dplyr::rename(township = MTR) %>%
dplyr::left_join(pur_out, by = "township") %>%
dplyr::mutate(kg_int = percent * kg,
location = location,
radius = radius,
start_date = start_date,
end_date = end_date,
chemicals = chemical_class,
area = buffer_area,
none_recorded = FALSE) %>%
dplyr::select(location, township, percent, kg, kg_int,
start_date, end_date, radius, chemicals, area,
none_recorded)
test_vec <- unique(clean_pur_df$chemical_class) %in% unique(exp$chemicals)
test <- all(test_vec)
if(!test) {
missing_classes <- unique(clean_pur_df$chemical_class)[!test_vec]
df_to_add <- data.frame(location = rep(location, length(missing_classes)),
township = rep(NA, length(missing_classes)),
percent = rep(NA, length(missing_classes)),
kg = rep(0, length(missing_classes)),
kg_int = rep(NA, length(missing_classes)),
start_date = rep(start_date, length(missing_classes)),
end_date = rep(end_date, length(missing_classes)),
radius = rep(radius, length(missing_classes)),
chemicals = missing_classes,
area = rep(buffer_area, length(missing_classes)),
none_recorded = rep(TRUE, length(missing_classes)))
exp <- rbind(exp, df_to_add)
}
exp_out <- exp %>% dplyr::group_by(chemicals) %>%
dplyr::summarise(exposure = sum(kg_int, na.rm = TRUE) / buffer_area)
to_join <- exp %>% dplyr::select(chemicals, none_recorded)
row_out <- data.frame(exposure = exp_out$exposure,
location = rep(location, nrow(exp_out)),
start_date = rep(start_date, nrow(exp_out)),
end_date = rep(end_date, nrow(exp_out)),
radius = rep(radius, nrow(exp_out)),
chemicals = exp_out$chemicals) %>%
dplyr::mutate(chemicals = as.character(chemicals),
location = as.factor(location)) %>%
dplyr::full_join(to_join, by = "chemicals")
}
}
nested_df <- list(row_out = row_out, meta_data = list(exp))
attr(nested_df, "row.names") <- as.integer(1)
class(nested_df) <- c("tbl_df", "data.frame")
return(nested_df)
}
comb_shp_filt <- subset(comb_shp, MTR %in% c(mtrs_int, "buffer"))
buffer_poly <- length(comb_shp_filt@polygons)
section_polys <- 1:(length(comb_shp_filt@polygons) - 1)
for (i in 1:length(section_polys)) {
section_area <- comb_shp_filt@polygons[[i]]@Polygons[[1]]@area
intersection <- rgeos::gIntersection(sp::SpatialPolygons(comb_shp_filt@polygons[i]),
sp::SpatialPolygons(comb_shp_filt@polygons[buffer_poly]))
if (is.null(intersection)) {
intersected_area <- 0
} else {
intersected_area <- rgeos::gArea(intersection)
}
percent_df <- data.frame(MTR = comb_shp_filt@data$MTR[i],
percent = intersected_area/section_area)
if (i == 1) {
out <- percent_df
} else {
out <- rbind(out, percent_df)
}
}
out <- dplyr::filter(out, percent != 0)
comb_shp_filt <- subset(comb_shp_filt, MTR %in% c(as.character(out$MTR),
"buffer"))
suppressMessages(comb_df_filt <- broom::tidy(comb_shp_filt))
comb_df_filt <- dplyr::mutate(comb_df_filt, group = as.character(group))
comb_df_filt <- df_filtered %>%
dplyr::mutate(group = as.character(group)) %>%
dplyr::right_join(comb_df_filt, by = c("long", "lat", "hole", "order",
"piece", "id", "group"))
pur_filt <- dplyr::filter(clean_pur_df, !is.na(kg_chm_used))
if (!any(unique(clean_pur_df$township) %in% mtrs_int)) {
buffer_area <- pi * (radius^2)
exp <- out %>% dplyr::mutate(MTR = as.character(MTR),
kg = 0,
kg_int = 0,
radius = radius,
start_date = time_df$start_date,
end_date = time_df$end_date,
chemicals = chemicals,
area = buffer_area,
location = location,
none_recorded = TRUE) %>%
dplyr::rename(township = MTR) %>%
dplyr::select(location, township, percent, kg, kg_int, start_date,
end_date, radius, chemicals, area, none_recorded)
row_out <- data.frame(exposure = 0,
location = location,
start_date = time_df$start_date,
end_date = time_df$end_date,
radius = radius,
chemicals = chemicals,
none_recorded = TRUE)
} else {
out <- purrr::map2(time_df$start_date, time_df$end_date,
calculate_exposure_bydate)
for (i in 1:length(out)) {
exp_row <- out[[i]]$row_out
meta_data <- out[[i]]$meta_data[[1]]
if (i == 1) {
row_out <- exp_row
meta_out <- meta_data
} else {
row_out <- rbind(row_out, exp_row)
meta_out <- rbind(meta_out, meta_data)
}
}
out <- list(exposure = row_out,
meta_data = meta_out,
buffer_plot = comb_df_filt,
county_plot = context_plot)
}
row_out
purrr::map2(time_df$start_date, time_df$end_date,
calculate_exposure_bydate)
time_df
purrr::map2(time_df$start_date, time_df$end_date,
calculate_exposure_bydate)
