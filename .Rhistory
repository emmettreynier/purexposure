if (is.null(start_date)) {
start_date <- min(clean_pur_df$date)
} else {
start_date <- lubridate::ymd(start_date)
}
if (is.null(end_date)) {
end_date <- max(clean_pur_df$date)
} else {
end_date <- lubridate::ymd(end_date)
}
time_df <- data.frame(start_date = start_date, end_date = end_date)
}
clean_pur_df <- clean_pur_df %>% dplyr::filter(date >= lubridate::ymd(min(time_df$start_date)) &
date <= lubridate::ymd(max(time_df$end_date)))
if ("section" %in% colnames(clean_pur_df)) {
out_list <- help_filter_pls(MTRS, "MTRS", which_pls, shp, buffer, df, clean_pur_df)
} else {
out_list <- help_filter_pls(MTR, "MTR", which_pls, shp, buffer, df, clean_pur_df)
}
pur_filt <- out_list$pur_filt
comb_df_filt <- out_list$comb_df_filt
pls_percents <- out_list$pls_intersections
pls_int <- out_list$pls_int
out <- purrr::map2(time_df$start_date,
time_df$end_date,
help_calculate_exposure, aerial_ground, chemicals,
clean_pur_df, location, pls_percents, pur_filt,
radius)
for (i in 1:length(out)) {
exp_row <- out[[i]]$row_out[[1]]
meta_data <- out[[i]]$meta_data[[1]]
if (i == 1) {
row_out <- exp_row
meta_out <- meta_data
} else {
row_out <- rbind(row_out, exp_row)
meta_out <- rbind(meta_out, meta_data)
}
}
row_out <- dplyr::mutate(row_out,
longitude = latlon_out[1],
latitude = latlon_out[2])
out <- row_out
# out <- list(exposure = row_out,
#             meta_data = meta_out,
#             buffer_plot_df = comb_df_filt,
#             county_plot = context_plot,
#             clean_pur_df = clean_pur_df)
return(out)
}
df <- expand.grid(location = location, radius = radii, start_date = start_dates,
end_date = end_date) %>%
mutate(location = as.character(location)) %>%
arrange(location) %>%
slice(1:3)
df
test <- purrr::pmap_dfr(df, calculate_exposure2, clean_pur_df = pur_df,
chemicals = "chemical_class")
test
location <- df$location[1]
radius <- df$radius[1]
start_date <- df$start_date[1]
end_date <- df$end_date[1]
test2 <- calculate_exposure(pur_df, location, radius, start_date = start_date,
end_date = end_date, chemicals = "chemical_class")
test2$exposure
test2$exposure
test2 <- calculate_exposure2(pur_df, location, radius, start_date = start_date,
end_date = end_date, chemicals = "chemical_class")
test2
df
df <- expand.grid(location = location, radius = radii, start_date = start_dates,
end_date = end_date) %>%
mutate(location = as.character(location)) %>%
arrange(location)
df
locations <- readRDS("~/Documents/pesticides_project/data/fresno_schools.rds")
ids <- readRDS("~/Documents/pesticides_project/data/schools_exposure/school_id.rds")
three <- unique(grep("Alvina|Terry|Sun Empire", schools$School, value = TRUE))
schools <- filter(locations, School %in% three) %>% select(School, full_address)
addresses <- schools$full_address
location <- purrr::map_chr(addresses, function(x) strsplit(x, "-")[[1]][1])
end_date <- "2000-01-01"
radii <- c(1250, 3000, 5000)
end_date <- lubridate::ymd(end_date)
start_date <- end_date - c(months(6), lubridate::years(1),
lubridate::years(2))
chemical_classes <- readRDS("~/Documents/pesticides_project/data/chemical_classes.rds")
chemical_class <- find_chemical_codes(2000, chemical_classes$chemname) %>%
full_join(chemical_classes, by = "chemname") %>%
rename(chemical_class = class) %>%
mutate(chemical_class = as.character(chemical_class)) %>%
select(chem_code, chemname, chemical_class) %>%
arrange(chemical_class) %>%
unique()
pur_df <- pull_clean_pur(c(1998:2000), "fresno",
sum_application = TRUE,
sum = "chemical_class",
chemical_class = chemical_class)
setwd("~/Documents/purexposure")
locations <- readRDS("~/Documents/pesticides_project/data/fresno_schools.rds")
ids <- readRDS("~/Documents/pesticides_project/data/schools_exposure/school_id.rds")
three <- unique(grep("Alvina|Terry|Sun Empire", schools$School, value = TRUE))
schools <- filter(locations, School %in% three) %>% select(School, full_address)
addresses <- schools$full_address
location <- purrr::map_chr(addresses, function(x) strsplit(x, "-")[[1]][1])
end_date <- "2000-01-01"
radii <- c(1250, 3000, 5000)
end_date <- lubridate::ymd(end_date)
start_date <- end_date - c(months(6), lubridate::years(1),
lubridate::years(2))
chemical_classes <- readRDS("~/Documents/pesticides_project/data/chemical_classes.rds")
chemical_class <- find_chemical_codes(2000, chemical_classes$chemname) %>%
full_join(chemical_classes, by = "chemname") %>%
rename(chemical_class = class) %>%
mutate(chemical_class = as.character(chemical_class)) %>%
select(chem_code, chemname, chemical_class) %>%
arrange(chemical_class) %>%
unique()
# pur_df <- pull_clean_pur(c(1998:2000), "fresno",
#                          sum_application = TRUE,
#                          sum = "chemical_class",
#                          chemical_class = chemical_class)
df <- expand.grid(location = location, radius = radii, start_date = start_dates,
end_date = end_date) %>%
mutate(location = as.character(location)) %>%
arrange(location)
df
df
list(df)
as.list(df)
test <- purrr::pmap_dfr(as.list(df), calculate_exposure2, clean_pur_df = pur_df,
chemicals = "chemical_class")
df <- expand.grid(location = location, radius = radii, start_date = start_dates,
end_date = end_date) %>%
mutate(location = as.character(location)) %>%
arrange(location) %>%
slice(1:3)
df
test <- purrr::pmap_dfr(as.list(df), calculate_exposure2, clean_pur_df = pur_df,
chemicals = "chemical_class")
test
df <- expand.grid(location = location, radius = radii, start_date = start_dates,
end_date = end_date) %>%
mutate(location = as.character(location)) %>%
arrange(location) %>%
slice(1)
df
test <- purrr::pmap_dfr(as.list(df), calculate_exposure2, clean_pur_df = pur_df,
chemicals = "chemical_class")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "vignettes"
)
sun_empire <- pull_clean_pur(2015, "fresno") %>%
calculate_exposure(location = "2649 North Modoc Ave., Kerman, CA",
radius = 1500)
sun_empire_plot <- df_plot(sun_empire$buffer_plot_df)
sun_empire_plot
library(purexposure)
locations <- readRDS("~/Documents/pesticides_project/data/fresno_schools.rds")
ids <- readRDS("~/Documents/pesticides_project/data/schools_exposure/school_id.rds")
three <- unique(grep("Alvina|Terry|Sun Empire", schools$School, value = TRUE))
schools <- filter(locations, School %in% three) %>% select(School, full_address)
addresses <- schools$full_address
location <- purrr::map_chr(addresses, function(x) strsplit(x, "-")[[1]][1])
end_date <- "2000-01-01"
radii <- c(1250, 3000, 5000)
end_date <- lubridate::ymd(end_date)
start_date <- end_date - c(months(6), lubridate::years(1),
lubridate::years(2))
chemical_classes <- readRDS("~/Documents/pesticides_project/data/chemical_classes.rds")
chemical_class <- find_chemical_codes(2000, chemical_classes$chemname) %>%
full_join(chemical_classes, by = "chemname") %>%
rename(chemical_class = class) %>%
mutate(chemical_class = as.character(chemical_class)) %>%
select(chem_code, chemname, chemical_class) %>%
arrange(chemical_class) %>%
unique()
pur_df <- pull_clean_pur(c(1998:2000), "fresno",
sum_application = TRUE,
sum = "chemical_class",
chemical_class = chemical_class)
expand.grid(location = location, radius = radii, start_date = start_dates,
end_date = end_date) %>%
mutate(location = as.character(location)) %>%
arrange(location)
expand.grid(location = location, radius = radii, start_date = start_date,
end_date = end_date) %>%
mutate(location = as.character(location)) %>%
arrange(location)
start_date
location
location <- purrr::map_chr(addresses, function(x) strsplit(x, "-")[[1]][1])
locations <- readRDS("~/Documents/pesticides_project/data/fresno_schools.rds")
ids <- readRDS("~/Documents/pesticides_project/data/schools_exposure/school_id.rds")
three <- unique(grep("Alvina|Terry|Sun Empire", schools$School, value = TRUE))
schools <- filter(locations, School %in% three) %>% select(School, full_address)
addresses <- schools$full_address
location <- purrr::map_chr(addresses, function(x) strsplit(x, "-")[[1]][1])
end_date <- "2000-01-01"
radii <- c(1250, 3000, 5000)
end_date <- lubridate::ymd(end_date)
start_date <- end_date - c(months(6), lubridate::years(1),
lubridate::years(2))
chemical_classes <- readRDS("~/Documents/pesticides_project/data/chemical_classes.rds")
chemical_class <- find_chemical_codes(2000, chemical_classes$chemname) %>%
full_join(chemical_classes, by = "chemname") %>%
rename(chemical_class = class) %>%
mutate(chemical_class = as.character(chemical_class)) %>%
select(chem_code, chemname, chemical_class) %>%
arrange(chemical_class) %>%
unique()
location <- purrr::map_chr(addresses, function(x) strsplit(x, "-")[[1]][1])
location
addresses <- schools$full_address
locations <- readRDS("~/Documents/pesticides_project/data/fresno_schools.rds")
ids <- readRDS("~/Documents/pesticides_project/data/schools_exposure/school_id.rds")
locations
ids
three <- unique(grep("Alvina|Terry|Sun Empire", schools$School, value = TRUE))
schools <- filter(locations, School %in% three) %>% select(School, full_address)
three <- unique(grep("Alvina|Terry|Sun Empire", locations$School, value = TRUE))
schools <- filter(locations, School %in% three) %>% select(School, full_address)
addresses <- schools$full_address
location <- purrr::map_chr(addresses, function(x) strsplit(x, "-")[[1]][1])
end_date <- "2000-01-01"
radii <- c(1250, 3000, 5000)
end_date <- lubridate::ymd(end_date)
start_date <- end_date - c(months(6), lubridate::years(1),
lubridate::years(2))
chemical_classes <- readRDS("~/Documents/pesticides_project/data/chemical_classes.rds")
chemical_class <- find_chemical_codes(2000, chemical_classes$chemname) %>%
full_join(chemical_classes, by = "chemname") %>%
rename(chemical_class = class) %>%
mutate(chemical_class = as.character(chemical_class)) %>%
select(chem_code, chemname, chemical_class) %>%
arrange(chemical_class) %>%
unique()
expand.grid(location = location, radius = radii, start_date = start_date,
end_date = end_date) %>%
mutate(location = as.character(location)) %>%
arrange(location)
df <- expand.grid(location = location, radius = radii, start_date = start_date,
end_date = end_date) %>%
mutate(location = as.character(location)) %>%
arrange(location) %>%
slice(1:2)
test <- purrr::pmap_dfr(df, calculate_exposure2, clean_pur_df = pur_df,
chemicals = "chemical_class")
calculate_exposure2 <- function(clean_pur_df, location, radius,
time_period = NULL, start_date = NULL,
end_date = NULL, chemicals = "all",
aerial_ground = FALSE, verbose = TRUE) {
# get numeric coordinate vector from location
if (length(grep("-", location)) == 1) {
latlon <- location
latlon_vec <- as.numeric(as.vector(sapply(unlist(strsplit(latlon, ",")),
stringr::str_trim)))
address_x <- latlon_vec[1]
address_y <- latlon_vec[2]
latlon_out <- latlon_vec
} else {
address <- location
suppressMessages(latlon_df <- ggmap::geocode(address, messaging = FALSE))
address_x <- latlon_df$lon
address_y <- latlon_df$lat
latlon_out <- as.numeric(c(latlon_df$lon, latlon_df$lat))
}
# pull county shapefile
county <- find_location_county(location, return = "name", latlon_out)
check <- toupper(county) %in% clean_pur_df$county_name
if (!check) {
stop(paste0("\"", location,  "\"", " is located in ", county, " county. ",
"\nThe clean_pur_df data frame doesn't include data for this ",
"county."))
}
clean_pur_df <- clean_pur_df %>% dplyr::filter(county_name == toupper(county))
if (verbose) {
message(paste0("Calculating exposure for the location ", "\"", location,
"\"", "."))
}
radius <- as.numeric(radius)
# coordinates for buffer
buffer <- geosphere::destPoint(p = c(address_x, address_y), b = 0:360,
d = radius)
colnames(buffer)[1] <- "long"
buffer_df <- as.data.frame(buffer)
range <- buffer_df %>% dplyr::summarise(min_long = min(long),
min_lat = min(lat),
max_long = max(long),
max_lat = max(lat))
if ("section" %in% colnames(clean_pur_df)) {
shp <- pull_spdf(county, "section")
df <- spdf_to_df(shp)
} else {
shp <- pull_spdf(county, "township")
df <- spdf_to_df(shp)
}
# context_plot <- ggplot2::ggplot(data = df) +
#   ggplot2::geom_polygon(ggplot2::aes(x = long, y = lat, group = group),
#                         color = "grey", fill = NA) +
#   ggplot2::geom_polygon(data = buffer_df, ggplot2::aes(x = long, y = lat),
#                         color = "red", fill = NA) +
#   ggplot2::theme_void()
# find sections (and townships) w/in buffer
which_pls <- df %>% dplyr::filter(long >= range$min_long &
long <= range$max_long &
lat >= range$min_lat &
lat <= range$max_lat)
if (nrow(which_pls) == 0) {
if ("section" %in% colnames(clean_pur_df)) {
borders <- df %>% group_by(MTRS) %>%
dplyr::summarise(min_long = min(long), min_lat = min(lat),
max_long = max(long), max_lat = max(lat))
corner <- purrr::map2_dfr(borders$max_long, borders$max_lat, help_calc_distance,
origin_long = range$max_long,
origin_lat = range$max_lat) %>%
dplyr::filter(long > range$max_long & lat > range$max_lat) %>%
dplyr::filter(dist == min(dist))
closest_pls <- borders %>% dplyr::filter(max_long == corner$long,
max_lat == corner$lat) %>%
dplyr::select(MTRS) %>%
tibble_to_vector()
which_pls <- df %>% dplyr::filter(MTRS == closest_pls)
} else {
borders <- df %>% group_by(MTR) %>%
dplyr::summarise(min_long = min(long), min_lat = min(lat),
max_long = max(long), max_lat = max(lat))
corner <- purrr::map2_dfr(borders$max_long, borders$max_lat, help_calc_distance,
origin_long = range$max_long,
origin_lat = range$max_lat) %>%
dplyr::filter(long > range$max_long & lat > range$max_lat) %>%
dplyr::filter(dist == min(dist))
closest_pls <- borders %>% dplyr::filter(max_long == corner$long,
max_lat == corner$lat) %>%
dplyr::select(MTR) %>%
tibble_to_vector()
which_pls <- df %>% dplyr::filter(MTR == closest_pls)
}
}
# data frame with start and end dates
if (!is.null(time_period)) {
# multiple time periods
if (is.null(start_date)) {
year <- lubridate::year(min(clean_pur_df$date))
start_date <- lubridate::ymd(paste0(year, "-01-01"))
} else {
start_date <- lubridate::ymd(start_date)
}
if (is.null(end_date)) {
year <- lubridate::year(max(clean_pur_df$date))
end_date <- lubridate::ymd(paste0(year, "12-31"))
} else {
end_date <- lubridate::ymd(end_date)
}
date_seq <- seq(start_date, end_date, by = time_period)
end_dates <- dplyr::lead(date_seq, 1) - lubridate::days(1)
time_df <- data.frame(start_date = date_seq,
end_date = end_dates)
time_df$end_date[nrow(time_df)] <- end_date
} else {
# one time period
if (is.null(start_date)) {
start_date <- min(clean_pur_df$date)
} else {
start_date <- lubridate::ymd(start_date)
}
if (is.null(end_date)) {
end_date <- max(clean_pur_df$date)
} else {
end_date <- lubridate::ymd(end_date)
}
time_df <- data.frame(start_date = start_date, end_date = end_date)
}
clean_pur_df <- clean_pur_df %>% dplyr::filter(date >= lubridate::ymd(min(time_df$start_date)) &
date <= lubridate::ymd(max(time_df$end_date)))
if ("section" %in% colnames(clean_pur_df)) {
out_list <- help_filter_pls(MTRS, "MTRS", which_pls, shp, buffer, df, clean_pur_df)
} else {
out_list <- help_filter_pls(MTR, "MTR", which_pls, shp, buffer, df, clean_pur_df)
}
pur_filt <- out_list$pur_filt
comb_df_filt <- out_list$comb_df_filt
pls_percents <- out_list$pls_intersections
pls_int <- out_list$pls_int
out <- purrr::map2(time_df$start_date,
time_df$end_date,
help_calculate_exposure, aerial_ground, chemicals,
clean_pur_df, location, pls_percents, pur_filt,
radius)
for (i in 1:length(out)) {
exp_row <- out[[i]]$row_out[[1]]
meta_data <- out[[i]]$meta_data[[1]]
if (i == 1) {
row_out <- exp_row
meta_out <- meta_data
} else {
row_out <- rbind(row_out, exp_row)
meta_out <- rbind(meta_out, meta_data)
}
}
row_out <- dplyr::mutate(row_out,
longitude = latlon_out[1],
latitude = latlon_out[2])
out <- row_out
# out <- list(exposure = row_out,
#             meta_data = meta_out,
#             buffer_plot_df = comb_df_filt,
#             county_plot = context_plot,
#             clean_pur_df = clean_pur_df)
return(out)
}
test <- purrr::pmap_dfr(df, calculate_exposure2, clean_pur_df = pur_df,
chemicals = "chemical_class")
devtools::load_all
devtools::load_all)_
devtools::load_all()
test <- purrr::pmap_dfr(df, calculate_exposure2, clean_pur_df = pur_df,
chemicals = "chemical_class")
location <- df$location[1]
radius <- df$radius[1]
start_date <- df$start_date[1]
end_date <- df$end_date[1]
test2 <- calculate_exposure2(pur_df, location, radius, start_date = start_date,
end_date = end_date, chemicals = "chemical_class")
test2
location <- df$location[2]
radius <- df$radius[2]
start_date <- df$start_date[2]
end_date <- df$end_date[2]
test2 <- calculate_exposure2(pur_df, location, radius, start_date = start_date,
end_date = end_date, chemicals = "chemical_class")
test2
df
for (i in 1:nrow(df)) {
exp <- calculate_exposure2(pur_df, df$location[i],
df$radius[i],
start_date = df$start_date[i],
end_date = df$end_date[i],
chemicals = "chemical_class")
if (i == 1) {
out <- exp
} else {
out <- rbind(out, exp)
}
}
out
locations <- readRDS("~/Documents/pesticides_project/data/fresno_schools.rds")
ids <- readRDS("~/Documents/pesticides_project/data/schools_exposure/school_id.rds")
three <- unique(grep("Alvina|Terry|Sun Empire", locations$School, value = TRUE))
schools <- filter(locations, School %in% three) %>% select(School, full_address)
addresses <- schools$full_address
location <- purrr::map_chr(addresses, function(x) strsplit(x, "-")[[1]][1])
end_date <- "2000-01-01"
radii <- c(1250, 3000, 5000)
end_date <- lubridate::ymd(end_date)
start_date <- end_date - c(months(6), lubridate::years(1),
lubridate::years(2))
chemical_classes <- readRDS("~/Documents/pesticides_project/data/chemical_classes.rds")
chemical_class <- find_chemical_codes(2000, chemical_classes$chemname) %>%
full_join(chemical_classes, by = "chemname") %>%
rename(chemical_class = class) %>%
mutate(chemical_class = as.character(chemical_class)) %>%
select(chem_code, chemname, chemical_class) %>%
arrange(chemical_class) %>%
unique()
df <- expand.grid(location = location, radius = radii, start_date = start_date,
end_date = end_date) %>%
mutate(location = as.character(location)) %>%
arrange(location)
df
for (i in 1:nrow(df)) {
exp <- calculate_exposure2(pur_df, df$location[i],
df$radius[i],
start_date = df$start_date[i],
end_date = df$end_date[i],
chemicals = "chemical_class")
if (i == 1) {
out <- exp
} else {
out <- rbind(out, exp)
}
}
out
library(ggplot2)
ggplot(out) +
geom_point(aes(x = location, y = exposure, color = radius, size = start_date))
unique(out$start_date)
ggplot(out) +
geom_point(aes(x = location, y = exposure, color = radius, shape = start_date))
out %>% mutate(start_date = as.factor(start_date)) %>%
ggplot() +
geom_point(aes(x = location, y = exposure, color = radius, shape = start_date))
citation("purexposure")
devtools::check()
library(purexposure)
devtools::check()
usethis::use_package("stats")
packageVersion("stats")
usethis::use_package("utils")
packageVersion("utils")
usethis::use_package("raster")
packageVersion("raster")
usethis::use_package("readr")
packageVersion("readr")
usethis::use_package("scales")
packageVersion("scales")
usethis::use_package("tibble")
packageVersion("tibble")
library(purexposure)
