end_date = exposure_mat[i, ]$end_date,
aerial_ground = NA,
location = exposure_mat[i, ]$original_location,
radius = exposure_mat[i, ]$radius,
longitude = NA, latitude = NA,
error_message = exposure_list[[i]]$error,
n_row = 1)
meta_data <- data.frame(pls = NA, chemicals = chemicals, percent = NA,
kg = NA, kg_intersection = NA,
start_date = exposure_mat[i, ]$start_date,
end_date = exposure_mat[i, ]$end_date,
aerial_ground = NA, none_recorded = NA,
location = exposure_mat[i, ]$original_location,
radius = exposure_mat[i, ]$radius,
area = NA, error_message = exposure_list[[i]]$error)
} else {
error_message <- NA
row <- exposure_list[[i]]$result$exposure %>%
dplyr::mutate(error_message = NA) %>%
dplyr::ungroup() %>%
dplyr::mutate(n_row = n())
meta_data <- exposure_list[[i]]$result$meta_data %>%
dplyr::mutate(error_message = NA,
location = exposure_mat[i, ]$original_location)
}
if (i == 1) {
row_out <- row
for (l in 1:unique(row$n_row)) {
meta_row <- row[l,]
chemicals_match <- meta_row$chemicals
aerial_ground_match <- meta_row$aerial_ground
radius_match <- meta_row$radius
if (length(unique(meta_data$chemicals)) > 1) {
meta_data_row <- meta_data %>%
dplyr::filter(chemicals == chemicals_match)
if (class(aerial_ground_match) != "logical" & aerial_ground_match %in%
c("A", "G", "O")) {
meta_data_row <- meta_data_row %>%
dplyr::filter(aerial_ground == aerial_ground_match)
if (length(unique(meta_data_row$radius)) > 1) {
meta_data_row <- meta_data_row %>%
dplyr::filter(radius == radius_match)
}
} else {
if (length(unique(meta_data_row$radius)) > 1) {
meta_data_row <- meta_data_row %>%
dplyr::filter(radius == radius_match)
}
}
} else {
if (class(aerial_ground_match) != "logical" & aerial_ground_match %in%
c("A", "G", "O")) {
meta_data_row <- meta_data %>%
dplyr::filter(aerial_ground == aerial_ground_match)
if (length(unique(meta_data_row$radius)) > 1) {
meta_data_row <- meta_data_row %>%
dplyr::filter(radius == radius_match)
}
} else {
if (length(unique(meta_data$radius)) > 1) {
meta_data_row <- meta_data %>%
dplyr::filter(radius == radius_match)
}
}
}
if (!exists("meta_data_row")) {
meta_data_row <- meta_data
}
meta_list[[l]] <- meta_data_row
}
} else {
row_out <- rbind(row_out, row)
starting_point <- length(meta_list)
meta_list_vec <- (1:unique(row$n_row)) + starting_point
for (l in meta_list_vec) {
meta_row <- row[l-starting_point,]
chemicals_match <- meta_row$chemicals
aerial_ground_match <- meta_row$aerial_ground
radius_match <- meta_row$radius
if (length(unique(meta_data$chemicals)) > 1) {
meta_data_row <- meta_data %>%
dplyr::filter(chemicals == chemicals_match)
if (class(aerial_ground_match) != "logical" & aerial_ground_match %in%
c("A", "G", "O")) {
meta_data_row <- meta_data_row %>%
dplyr::filter(aerial_ground == aerial_ground_match)
if (length(unique(meta_data_row$radius)) > 1) {
meta_data_row <- meta_data_row %>%
dplyr::filter(radius == radius_match)
}
} else {
if (length(unique(meta_data_row$radius)) > 1) {
meta_data_row <- meta_data_row %>%
dplyr::filter(radius == radius_match)
}
}
} else {
if (class(aerial_ground_match) != "logical" & aerial_ground_match %in%
c("A", "G", "O")) {
meta_data_row <- meta_data %>%
dplyr::filter(aerial_ground == aerial_ground_match)
if (length(unique(meta_data_row$radius)) > 1) {
meta_data_row <- meta_data_row %>%
dplyr::filter(radius == radius_match)
}
} else {
if (length(unique(meta_data$radius)) > 1) {
meta_data_row <- meta_data %>%
dplyr::filter(radius == radius_match)
}
}
}
if (!exists("meta_data_row")) {
meta_data_row <- meta_data
}
meta_list[[l]] <- meta_data_row
}
}
}
if (!dir.exists(directory)) {
dir.create(directory)
}
row_out <- row_out %>%
dplyr::select(-n_row) %>%
dplyr::mutate(aerial_ground = ifelse(aerial_ground == "NA", NA, aerial_ground),
chemicals = ifelse(chemicals == "NA", NA, chemicals))
saveRDS(row_out, file = paste0(directory, "/exposure_df.rds"))
saveRDS(meta_list, file = paste0(directory, "/meta_data.rds"))
}
write_exposure(clean_pur_df, locations_dates_df, radii, "~/Desktop", "chemical_class")
clean_pur_df <- fresno_data
locations_dates_df <- locations_dates[i, ]
radii <- 3000
directory <- paste0("~/Desktop/first_run_", i)
chemicals <- "chemical_class"
aerial_ground <- FALSE
write_plots <- FALSE
verbose <- TRUE
write_exposure(clean_pur_df, locations_dates_df, radii, "~/Desktop", "chemical_class")
nrow(locations_dates)
for (i in 1:nrow(locations_dates)) {
possibleError <- tryCatch({
clean_pur_df <- fresno_data
locations_dates_df <- locations_dates[i, ]
radii <- 3000
directory <- paste0("~/Desktop/first_run_", i)
chemicals <- "chemical_class"
aerial_ground <- FALSE
write_plots <- FALSE
verbose <- TRUE
write_exposure(clean_pur_df, locations_dates_df, radii, directory,
"chemical_class")
}
,
error = function(e) {
e
message(paste0("problem with row ", i))
}
)
if (inherits(possibleError, "error")) next
}
list.files("~/Desktop")
"grep"
?grep
grep("first_run", list.files("~/Desktop"), value = TRUE)
grep("first_run", list.files("~/Desktop"), value = TRUE)
grep("first_run", list.files("~/Desktop"), value = TRUE)[2:113]
grep("first_run_", list.files("~/Desktop"), value = TRUE)
directories <- grep("first_run_", list.files("~/Desktop"), value = TRUE)
?file.rename
numbers <- as.numeric(gsub("first_run_", "", directories))
numbers
i <- 1
df <- readRDS(paste0("~/Desktop/first_run_", numbers[i], "/exposure_df.rds"))
df
df <- df %>% mutate(i = numbers[i])
df
for (i in 1:length(directories)) {
df <- readRDS(paste0("~/Desktop/first_run_", numbers[i], "/exposure_df.rds"))
df <- df %>% mutate(row_number = numbers[i])
if (i == 1) {
out <- df
} else {
out <- rbind(out, df)
}
}
out
saveRDS(out, file = "~/Desktop/first_run.rds")
list.files(temp)
pur <- pull_clean_pur(2000, "fresno")
library(purexposure)
pur <- pull_clean_pur(2000, "fresno")
df <- data.frame(location = "3333 American Ave., Fresno, CA 93725",
start_date = "2000-01-01",
end_date = "2000-12-31")
temp <- tempdir()
write_exposure(pur, df, 3000, temp)
exposure <- readRDS(paste0(temp, "/exposure_df.rds"))
meta <- readRDS(paste0(temp, "/meta_data.rds"))
exposure
meta
list.files(temp)
list.files(paste0(temp, "/exposure_plots"))
tmep
temp
devtools::document()
?write_exposure
devtools::document()
devtools::document()
?write_exposure
#' chemical_class_df <- rbind(find_chemical_codes(2000:2001, "sulfur"),
#' chemical_class_df <- rbind(find_chemical_codes(2000:2001, "sulfur"),
#'                            find_chemical_codes(2000:2001, "methyl bromide")) %>%
chemical_class_df
devtools::document()
?write_exposure
plot_county_locations("fresno")
tulare_list <- pull_clean_pur(2010, "tulare") %>% plot_county_application()
fresno_list <- pull_clean_pur(2000, "fresno") %>% plot_county_application()
library(magrittr)
fresno_list <- pull_clean_pur(2000, "fresno") %>% plot_county_application()
names(fresno_list)
frenso_list$map
fresno_list$map
fresno_list$data
fresno_list <- pull_clean_pur(2000, "fresno") %>%
calculate_exposure(location = "-119.2321, 36.9859", radius = 3000) %>%
plot_exposure()
fresno_list <- pull_clean_pur(2000, "fresno") %>%
calculate_exposure(location = "-119.2321, 36.9859", radius = 3000)
fresno_list <- pull_clean_pur(2000, "fresno") %>%
calculate_exposure(location = "-119.2321, 36.9859", radius = 3000)
exposure_list <- fresno_list
color_by = "amount"
buffer_or_county = "county"
percentile = c(0.25, 0.5, 0.75)
fill = "viridis"
alpha = 0.7
pls_labels = FALSE
pls_labels_size = 4
buffer_df <- exposure_list$buffer_plot_df
clean_pur <- exposure_list$clean_pur_df
pls_data <- exposure_list$meta_data %>%
dplyr::group_by(start_date, end_date, aerial_ground, chemicals) %>%
tidyr::nest()
colormaps_vec <- unlist(colormap::colormaps)
names(colormaps_vec) <- NULL
if (!fill %in% colormaps_vec) {
stop(paste0("The fill argument should be a color palette from the ",
"colormap package."))
}
gradient <- colormap::colormap(fill, nshades = 1000, alpha = alpha)
location_longitude <- unique(exposure_list$exposure$longitude)
location_latitude <- unique(exposure_list$exposure$latitude)
buffer2 <- buffer_df %>%
dplyr::filter(id == "buffer1")
buffer_df <- buffer_df %>%
tidyr::gather(key = "section_or_township", value = "pls", MTR, MTRS)
buffer <- dplyr::select(buffer2, long, lat)
buffer <- buffer[grDevices::chull(buffer), ]
buffer <- methods::as(buffer, "gpc.poly")
pls_data <- pls_data %>% dplyr::mutate(aerial_ground = as.character(aerial_ground),
chemicals = as.character(chemicals))
pls_data <- exposure_list$exposure %>%
dplyr::select(start_date, end_date, chemicals, aerial_ground) %>%
dplyr::full_join(pls_data, by = c("start_date", "end_date", "aerial_ground",
"chemicals")) %>%
dplyr::ungroup() %>%
dplyr::rename(data_pls = data) %>%
dplyr::mutate(none_recorded = NA)
str(exposure_list$exposure)
str(pls_data)
pls_data <- exposure_list$exposure %>%
dplyr::mutate(aerial_ground = as.character(aerial_ground)) %>%
dplyr::select(start_date, end_date, chemicals, aerial_ground) %>%
dplyr::full_join(pls_data, by = c("start_date", "end_date", "aerial_ground",
"chemicals")) %>%
dplyr::ungroup() %>%
dplyr::rename(data_pls = data) %>%
dplyr::mutate(none_recorded = NA)
warnings()
#' clotho <- pull_clean_pur(1996, "fresno") %>%
#'   dplyr::filter(chemname == "SULFUR") %>%
#'   calculate_exposure(location = "-119.6082, 36.7212",
#'                     radius = 1500)
#'
#' plot_exposure(clotho, "amount", buffer_or_county = "county", pls_labels = TRUE)$maps
#' plot_exposure(clotho, "amount", buffer_or_county = "buffer", pls_labels = TRUE)$maps
#' }
#' @importFrom magrittr %>%
#' @export
plot_exposure <- function(exposure_list, color_by = "amount",
buffer_or_county = "county",
percentile = c(0.25, 0.5, 0.75), fill = "viridis",
alpha = 0.7, pls_labels = FALSE, pls_labels_size = 4) {
buffer_df <- exposure_list$buffer_plot_df
clean_pur <- exposure_list$clean_pur_df
pls_data <- exposure_list$meta_data %>%
dplyr::group_by(start_date, end_date, aerial_ground, chemicals) %>%
tidyr::nest()
# each $data row is input into function below to return a plot.
colormaps_vec <- unlist(colormap::colormaps)
names(colormaps_vec) <- NULL
if (!fill %in% colormaps_vec) {
stop(paste0("The fill argument should be a color palette from the ",
"colormap package."))
}
gradient <- colormap::colormap(fill, nshades = 1000, alpha = alpha)
location_longitude <- unique(exposure_list$exposure$longitude)
location_latitude <- unique(exposure_list$exposure$latitude)
buffer2 <- buffer_df %>%
dplyr::filter(id == "buffer1")
buffer_df <- buffer_df %>%
tidyr::gather(key = "section_or_township", value = "pls", MTR, MTRS)
buffer <- dplyr::select(buffer2, long, lat)
buffer <- buffer[grDevices::chull(buffer), ]
buffer <- methods::as(buffer, "gpc.poly")
# want pls_data in same order as exposure_list$exposure
pls_data <- pls_data %>% dplyr::mutate(aerial_ground = as.character(aerial_ground),
chemicals = as.character(chemicals))
pls_data <- exposure_list$exposure %>%
dplyr::mutate(aerial_ground = as.character(aerial_ground)) %>%
dplyr::select(start_date, end_date, chemicals, aerial_ground) %>%
dplyr::full_join(pls_data, by = c("start_date", "end_date", "aerial_ground",
"chemicals")) %>%
dplyr::ungroup() %>%
dplyr::rename(data_pls = data) %>%
dplyr::mutate(none_recorded = NA)
for (i in 1:nrow(pls_data)) {
data_pls_df <- pls_data$data_pls[[i]]
if (all(data_pls_df$none_recorded == TRUE)) {
pls_data$none_recorded[i] <- TRUE
} else {
pls_data$none_recorded[i] <- FALSE
}
pls_data$data_pls[[i]] <- pls_data$data_pls[[i]] %>%
dplyr::mutate(kg = ifelse(kg == 0, NA, kg),
kg_intersection = ifelse(kg_intersection == 0, NA, kg))
}
pls_data <- pls_data %>% dplyr::select(1:4, 6, 5)
out_maps <- list()
for (i in 1:nrow(pls_data)) {
map <- help_map_exp(pls_data$start_date[i], pls_data$end_date[i],
pls_data$chemicals[i], pls_data$aerial_ground[i],
pls_data$none_recorded[i], pls_data$data_pls[[i]],
gradient, location_longitude, location_latitude,
buffer_df, buffer2, buffer, buffer_or_county, alpha,
clean_pur, pls_labels, pls_labels_size, percentile,
color_by)
out_maps[[i]] <- map
}
# reformat list
plots <- list()
dfs <- list()
cutoff_values <- list()
exposures <- list()
for (i in 1:length(out_maps)) {
plots[[i]] <- out_maps[[i]]$plot
dfs[[i]] <- out_maps[[i]]$data
cutoff_values[[i]] <- out_maps[[i]]$cutoff_values
exposures[[i]] <- exposure_list$exposure[i,]
}
if (color_by == "amount") {
out_maps_list <- list(maps = plots, pls_data = dfs,
exposure = exposures)
} else if (color_by == "percentile") {
out_maps_list <- list(maps = plots, pls_data = dfs,
exposure = exposures,
cutoff_values = cutoff_values)
}
return(out_maps_list)
}
fresno_list <- pull_clean_pur(2000, "fresno") %>%
calculate_exposure(location = "-119.2321, 36.9859", radius = 3000) %>%
plot_exposure()
names(fresno_list)
fresno_list$maps
fresno_list$pls_data
fresno_list$exposure
pur <- pull_clean_pur(2000, "fresno")
df <- data.frame(location = "-119.726751, 36.660967,",
start_date = "2000-01-01",
end_date = "2000-12-31")
temp <- tempdir()
write_exposure(pur, df, 3000, temp)
exposure <- readRDS(paste0(temp, "/exposure_df.rds"))
meta <- readRDS(paste0(temp, "/meta_data.rds"))
list.files(paste0(temp, "/exposure_plots"))
exposure
fresno_list <- pull_clean_pur(2000, "fresno") %>%
calculate_exposure(location = "-119.726751, 36.660967", radius = 3000) %>%
plot_exposure()
names(fresno_list)
fresno_list$maps
fresno_list$pls_data
fresno_list$exposure
pull_clean_pur(2000, "riverside") %>% plot_application_timeseries()
pull_clean_pur(2000, "fresno") %>% plot_application_timeseries()
fresno <- pull_clean_pur(2000, "fresno")
df <- data.frame(location = c("295 West Saginaw Ave., Caruthers, CA 93609",
"55190 Point Rd., Big Creek, CA 93605"),
start_date = "2000-01-01", end_date = "2000-12-31")
fresno <- pull_clean_pur(2000, "fresno")
df <- data.frame(location = c("295 West Saginaw Ave., Caruthers, CA 93609",
"55190 Point Rd., Big Creek, CA 93605"),
start_date = "2000-01-01", end_date = "2000-12-31")
temp_dir <- tempdir()
write_exposure(fresno, df, 3000, temp_dir)
exp_df <- readRDS(paste0(temp_dir, "/exposure_df.rds")
plot_locations_exposure(exp_df)
exp_df <- readRDS(paste0(temp_dir, "/exposure_df.rds"))
plot_locations_exposure(exp_df)
exp_df
devtools::document()
setwd("~/Documents/purexposure")
devtools::document()
devtools::build()
devtools::build()
devtools::check()
?pull_clean_pur
library(purexposure)
?pull_clean_pur
# save toy datasets to use for examples
fresno_2000 <- pull_clean_pur(2000, 'fresno"')
# save toy datasets to use for examples
fresno_2000 <- pull_clean_pur(2000, "fresno")
usethis::use_data(fresno_2000, overwrite = TRUE)
fresno_2000
fresno_ex <- fresno_2000 %>%
dplyr::filter(date >= lubridate::ymd("2000-01-01") &
date <= lubridate::ymd("2000-02-29"))
library(magrittr)
fresno_ex <- fresno_2000 %>%
dplyr::filter(date >= lubridate::ymd("2000-01-01") &
date <= lubridate::ymd("2000-02-29"))
usethis::use_data(fresno_ex, overwrite = TRUE)
# save toy datasets to use for examples
fresno_ex <- pull_clean_pur(2000, "fresno")
fresno_ex <- fresno_ex %>%
dplyr::filter(date >= lubridate::ymd("2000-01-01") &
date <= lubridate::ymd("2000-01-31"))
usethis::use_data(fresno_ex, overwrite = TRUE)
prod_df <- find_product_name(2000, "mosquito")
prod_df
devtools::document()
?pull_spdf
devtools::document()
?pull_spdf
clean_pur <- purexposure::fresno_ex
clean_pur
tail(clean_pur)
dim(clean_pur)
devtools::document()
?fresno_ex
exposure_list <- calculate_exposure(clean_pur,
location = "13883 Lassen Ave, Helm, CA 93627",
radius = 3000)
exposure_list <- calculate_exposure(clean_pur,
location = "-120.098794, 36.532866",
radius = 3000)
exposure_list
exposure_list <- calculate_exposure(clean_pur,
location = "-120.098794, 36.532866",
radius = 3000)
names(exposure_list)
exposure_list$exposure
exposure_ex <- purexposure::fresno_ex %>%
calculate_exposure(location = "-119.726751, 36.660967", radius = 3000)
usethis::use_data(exposure_ex, overwrite = TRUE)
names(exposure_ex)
expoure_ex$clean_pur_f
exposure_ex$clean_pur_df
exposure_ex$county_plot <- NULL
usethis::use_data(exposure_ex)
exposure_ex <- purexposure::fresno_ex %>%
calculate_exposure(location = "-119.726751, 36.660967", radius = 3000)
exposure_ex$county_plot <- NULL
usethis::use_data(exposure_ex, overwrite = TRUE)
fresno_list <- purexposure::exposure_ex %>% plot_exposure()
devtools::document()
fresno_list <- purexposure::exposure_ex %>% plot_exposure()
fresno_list
fresno_list$maps
exposure_ex
names(exposure_ex)
devtools::document()
fresno <- purexposure::fresno_ex
df <- data.frame(location = c("295 West Saginaw Ave., Caruthers, CA 93609",
"55190 Point Rd., Big Creek, CA 93605"),
start_date = "2000-01-01", end_date = "2000-12-31")
temp_dir <- tempdir()
write_exposure(fresno, df, 3000, temp_dir)
exp_df <- readRDS(paste0(temp_dir, "/exposure_df.rds"))
plot_locations_exposure(exp_df)
exposure_ex$exposure
plot_locations_exposure(purexposure::exposure_ex$exposure)
exposure_ex2 <- purexposure::fresno_ex %>%
calculate_exposure(location = "-119.247100, 37.204875", radius = 3000)
exposure_ex2
usethis::use_data(exposure_ex2, overwrite = TRUE)
exposure_ex2$county_plot <- NULL
usethis::use_data(exposure_ex2, overwrite = TRUE)
exposure_df <- rbind(purexposure::exposure_ex$exposure,
purexposure::exposure_ex2$exposure)
devtools::document()
exposure_df <- rbind(purexposure::exposure_ex$exposure,
purexposure::exposure_ex2$exposure)
exposure_df
plot_locations_exposure(exposure_df)
pur <- purexposure::fresno_ex
pur
devtools::document()
