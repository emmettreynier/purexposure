}
df <- do.call("rbind", df)
out <- purrr::map_dfr(chemicals, help_find_chemical, df)  %>%
unique() %>%
dplyr::select(chem_code, chemname, chemical, year)
out
source('~/Documents/purexposure/R/01-helpers.R')
out <- purrr::map_dfr(chemicals, help_find_chemical, df)  %>%
unique() %>%
dplyr::select(chem_code, chemname, chemical, year)
purrr::map_dfr(chemicals, help_find_chemical, df)  %>%
unique()
library(purexposure)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "vignettes"
)
find_chemical_codes(year = 2000, chemicals = c("methyl bromide", "abietic"))
year <- 2000
chemicals = c("methyl bromide", "abietic")
df <- purexposure::chemical_list
df <- df[names(df) %in% years]
for (i in 1:length(years)) {
df[[i]] <- df[[i]] %>% dplyr::mutate(year = years[i])
}
df <- do.call("rbind", df)
library(purexposure)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "vignettes"
)
find_chemical_codes(year = 2000, chemicals = c("methyl bromide", "abietic"))
find_chemical_codes(2000) %>% nrow
find_chemical_codes(c(2000, 2001)) %>% nrow
for (year in 1990:2015) {
n <- find_chemical_codes(year) %>% nrow
df <- data.frame(n = n, year = year)
if (i == 1) {
out <- df
} else {
out <- rbind(out, df)
}
}
head(out)
for (year in 1990:2015) {
n <- find_chemical_codes(year) %>% nrow
df <- data.frame(n = n, year = year)
if (year == 1990) {
out <- df
} else {
out <- rbind(out, df)
}
}
out
one <- find_chemical_codes(2006)
two <- find_chemical_codes(2007)
two$chemname[!two$chemname %in% one$chemname]
find_chemical_codes(c(2000, 2001), chemicals = "methyl bromide")
find_chemical_codes(c(2000, 2001), chemicals = "methyl bromide", by_year = TRUE)
find_chemical_codes(c(2006, 2007), chemicals = "imazosulfuron", by_year = TRUE)
find_chemical_codes(c(2006, 2007), chemicals = c("methyl bromide", "imazosulfuron"))
?find_product_name
years <- 2000
prod_df <- pull_product_table(years, quiet = quiet)
products <- "mosquito"
quiet = FALSE
prod_df <- pull_product_table(years, quiet = quiet)
for (i in 1:length(products)) {
df <- help_find_product(products[i], prod_df)
if (i == 1) {
out <- df
} else {
out <- rbind(out, df)
}
}
out
out <- unique(out) %>% dplyr::select(1:4, product, year)
out
#'   \item{year}{The year for which product table information was pulled.
#'   Included if `by_year` is set to TRUE.}
#' }
#'
#' @examples
#' \dontrun{
#' prod_df <- find_product_name(2000, "mosquito")
#' prod_df2 <- find_product_name(2010, c("insecticide", "rodenticide"))
#' }
#' @export
find_product_name <- function(years, products = "all", quiet = FALSE,
by_year = FALSE) {
prod_df <- pull_product_table(years, quiet = quiet)
for (i in 1:length(products)) {
df <- help_find_product(products[i], prod_df)
if (i == 1) {
out <- df
} else {
out <- rbind(out, df)
}
}
out <- unique(out) %>% dplyr::select(1:4, product, year)
if (!by_year) {
out <- out %>% dplyr::select(-year) %>% unique()
}
return(out)
}
devtools::document()
setwd("~/Documents/purexposure")
devtools::document()
prod_df <- pull_product_table(years, quiet = quiet)
prod_df
library(purexposure)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "vignettes"
)
find_counties(c("01", "02", "03"), return = "names")
?find_counties
find_counties(c("Alameda", "Alpine", "Amador"), return = "fips_codes")
find_counties(c("Alameda", "Alpine", "Amador"), return = "pur_codes")
find_counties(c("Alameda", "Alpine", "Amador"), return = "fips_codes")
purexposure::county_codes %>% slice(1:3)
?find_location_county
head(fresno_clean, 2)
load("data/fresno_clean.RData")
head(fresno_clean, 2)
fresno_clean <- pull_clean_pur(2004, "fresno")
fresno_clean <- fresno_clean[1:2,]
fresno_clean
save(fresno_clean, file = "data/fresno_clean.RData")
load("data/fresno_clean.RData")
head(fresno_clean, 2)
chemical_class_df <- rbind(find_chemical_codes(2000, "methylene"),
find_chemical_codes(2000, "aldehyde")) %>%
rename(chemical_class = chemical)
head(chemical_class_df, 2)
tail(chemical_class_df, 2)
source('~/Documents/purexposure/R/03-pull.R')
source('~/Documents/purexposure/R/03-pull.R')
library(purexposure)
?pull_raw_pur
#'    calculate_exposure(location = "-121.9018, 38.7646",
#'    radius = 2500,
#'    aerial_ground = TRUE)
#' exp_list5$exposure
#' }
#' @importFrom magrittr %>%
#' @importFrom rlang :=
#' @importFrom rlang !!
#' @importFrom rlang !!!
#' @export
calculate_exposure <- function(clean_pur_df, location, radius,
time_period = NULL, start_date = NULL,
end_date = NULL, chemicals = "all",
aerial_ground = FALSE, verbose = TRUE) {
# get numeric coordinate vector from location
if (length(grep("-", location)) == 1) {
latlon <- location
latlon_vec <- as.numeric(as.vector(sapply(unlist(strsplit(latlon, ",")),
stringr::str_trim)))
address_x <- latlon_vec[1]
address_y <- latlon_vec[2]
latlon_out <- latlon_vec
} else {
address <- location
suppressMessages(latlon_df <- ggmap::geocode(address, messaging = FALSE))
address_x <- latlon_df$lon
address_y <- latlon_df$lat
latlon_out <- as.numeric(c(latlon_df$lon, latlon_df$lat))
}
# pull county shapefile
county <- find_location_county(location, return = "name", latlon_out)$county
check <- toupper(county) %in% clean_pur_df$county_name
if (!check) {
stop(paste0("\"", location,  "\"", " is located in ", county, " county. ",
"\nThe clean_pur_df data frame doesn't include data for this ",
"county."))
}
clean_pur_df <- clean_pur_df %>% dplyr::filter(county_name == toupper(county))
if (verbose) {
message(paste0("Calculating exposure for the location ", "\"", location,
"\"", "."))
}
radius <- as.numeric(radius)
# coordinates for buffer
buffer <- geosphere::destPoint(p = c(address_x, address_y), b = 0:360,
d = radius)
colnames(buffer)[1] <- "long"
buffer_df <- as.data.frame(buffer)
range <- buffer_df %>% dplyr::summarise(min_long = min(long),
min_lat = min(lat),
max_long = max(long),
max_lat = max(lat))
if ("section" %in% colnames(clean_pur_df)) {
shp <- pull_spdf(county, "section")
df <- spdf_to_df(shp)
} else {
shp <- pull_spdf(county, "township")
df <- spdf_to_df(shp)
}
context_plot <- ggplot2::ggplot(data = df) +
ggplot2::geom_polygon(ggplot2::aes(x = long, y = lat, group = group),
color = "grey", fill = NA) +
ggplot2::geom_polygon(data = buffer_df, ggplot2::aes(x = long, y = lat),
color = "red", fill = NA) +
ggplot2::theme_void() +
ggplot2::coord_map()
# find sections (and townships) w/in buffer
which_pls <- df %>% dplyr::filter(long >= range$min_long &
long <= range$max_long &
lat >= range$min_lat &
lat <= range$max_lat)
if (nrow(which_pls) == 0) {
if ("section" %in% colnames(clean_pur_df)) {
borders <- df %>% group_by(MTRS) %>%
dplyr::summarise(min_long = min(long), min_lat = min(lat),
max_long = max(long), max_lat = max(lat))
corner <- purrr::map2_dfr(borders$max_long, borders$max_lat, help_calc_distance,
origin_long = range$max_long,
origin_lat = range$max_lat) %>%
dplyr::filter(long > range$max_long & lat > range$max_lat) %>%
dplyr::filter(dist == min(dist))
closest_pls <- borders %>% dplyr::filter(max_long == corner$long,
max_lat == corner$lat) %>%
dplyr::select(MTRS) %>%
tibble_to_vector()
which_pls <- df %>% dplyr::filter(MTRS == closest_pls)
} else {
borders <- df %>% group_by(MTR) %>%
dplyr::summarise(min_long = min(long), min_lat = min(lat),
max_long = max(long), max_lat = max(lat))
corner <- purrr::map2_dfr(borders$max_long, borders$max_lat, help_calc_distance,
origin_long = range$max_long,
origin_lat = range$max_lat) %>%
dplyr::filter(long > range$max_long & lat > range$max_lat) %>%
dplyr::filter(dist == min(dist))
closest_pls <- borders %>% dplyr::filter(max_long == corner$long,
max_lat == corner$lat) %>%
dplyr::select(MTR) %>%
tibble_to_vector()
which_pls <- df %>% dplyr::filter(MTR == closest_pls)
}
}
# data frame with start and end dates
if (!is.null(time_period)) {
# multiple time periods
if (is.null(start_date)) {
year <- lubridate::year(min(clean_pur_df$date))
start_date <- lubridate::ymd(paste0(year, "-01-01"))
} else {
start_date <- lubridate::ymd(start_date)
}
if (is.null(end_date)) {
year <- lubridate::year(max(clean_pur_df$date))
end_date <- lubridate::ymd(paste0(year, "12-31"))
} else {
end_date <- lubridate::ymd(end_date)
}
date_seq <- seq(start_date, end_date, by = time_period)
end_dates <- dplyr::lead(date_seq, 1) - lubridate::days(1)
time_df <- data.frame(start_date = date_seq,
end_date = end_dates)
time_df$end_date[nrow(time_df)] <- end_date
} else {
# one time period
if (is.null(start_date)) {
start_date <- min(clean_pur_df$date)
} else {
start_date <- lubridate::ymd(start_date)
}
if (is.null(end_date)) {
end_date <- max(clean_pur_df$date)
} else {
end_date <- lubridate::ymd(end_date)
}
time_df <- data.frame(start_date = start_date, end_date = end_date)
}
clean_pur_df <- clean_pur_df %>% dplyr::filter(date >= lubridate::ymd(min(time_df$start_date)) &
date <= lubridate::ymd(max(time_df$end_date)))
if ("section" %in% colnames(clean_pur_df)) {
out_list <- help_filter_pls(MTRS, "MTRS", which_pls, shp, buffer, df, clean_pur_df)
} else {
out_list <- help_filter_pls(MTR, "MTR", which_pls, shp, buffer, df, clean_pur_df)
}
pur_filt <- out_list$pur_filt
comb_df_filt <- out_list$comb_df_filt
pls_percents <- out_list$pls_intersections
pls_int <- out_list$pls_int
out <- purrr::map2(time_df$start_date,
time_df$end_date,
help_calculate_exposure, aerial_ground, chemicals,
clean_pur_df, location, pls_percents, pur_filt,
radius)
for (i in 1:length(out)) {
exp_row <- out[[i]]$row_out[[1]]
meta_data <- out[[i]]$meta_data[[1]]
if (i == 1) {
row_out <- exp_row
meta_out <- meta_data
} else {
row_out <- rbind(row_out, exp_row)
meta_out <- rbind(meta_out, meta_data)
}
}
row_out <- dplyr::mutate(row_out,
longitude = latlon_out[1],
latitude = latlon_out[2])
out <- list(exposure = row_out,
meta_data = meta_out,
buffer_plot_df = comb_df_filt,
county_plot = context_plot,
clean_pur_df = clean_pur_df)
return(out)
}
devtools::document()
?pull_raw_pur
View(help_write_md)
?pull_spdf
?pull_clean_pur
library(purexposure)
library(purexposure)
library(purexposure)
test <- pull_clean_pur(2000, "fresno")
head(test)
test <- pull_clean_pur(2000, "fresno")
test <- pull_raw_pur(2000, "fresno")
test
turk <- pull_clean_pur(1996, "fresno") %>%
dplyr::filter(chemname == "PHOSPHORIC ACID") %>%
calculate_exposure(location = "-120.218404, 36.1806",
radius = 1500)
turk <- pull_clean_pur(1996, "fresno")
turk <- pull_clean_pur(1996, "fresno") %>%
dplyr::filter(chemname == "PHOSPHORIC ACID")
clean_pur_df <- turk
location <- "-120.218404, 36.1806"
radius <- 1500
time_period = NULL
start_date = NULL
end_date = NULL
chemicals = "all"
aerial_ground = FALSE
verbose = TRUE
# get numeric coordinate vector from location
if (length(grep("-", location)) == 1) {
latlon <- location
latlon_vec <- as.numeric(as.vector(sapply(unlist(strsplit(latlon, ",")),
stringr::str_trim)))
address_x <- latlon_vec[1]
address_y <- latlon_vec[2]
latlon_out <- latlon_vec
} else {
address <- location
suppressMessages(latlon_df <- ggmap::geocode(address, messaging = FALSE))
address_x <- latlon_df$lon
address_y <- latlon_df$lat
latlon_out <- as.numeric(c(latlon_df$lon, latlon_df$lat))
}
# pull county shapefile
county <- find_location_county(location, return = "name", latlon_out)$county
check <- toupper(county) %in% clean_pur_df$county_name
if (!check) {
stop(paste0("\"", location,  "\"", " is located in ", county, " county. ",
"\nThe clean_pur_df data frame doesn't include data for this ",
"county."))
}
clean_pur_df <- clean_pur_df %>% dplyr::filter(county_name == toupper(county))
if (verbose) {
message(paste0("Calculating exposure for the location ", "\"", location,
"\"", "."))
}
radius <- as.numeric(radius)
# coordinates for buffer
buffer <- geosphere::destPoint(p = c(address_x, address_y), b = 0:360,
d = radius)
colnames(buffer)[1] <- "long"
buffer_df <- as.data.frame(buffer)
range <- buffer_df %>% dplyr::summarise(min_long = min(long),
min_lat = min(lat),
max_long = max(long),
max_lat = max(lat))
if ("section" %in% colnames(clean_pur_df)) {
shp <- pull_spdf(county, "section")
df <- spdf_to_df(shp)
} else {
shp <- pull_spdf(county, "township")
df <- spdf_to_df(shp)
}
"section" %in% colnames(clean_pur_df)
section_township = "section"
county
quiet = FALSE
county != "Statewide"
county_name <- find_counties(county, return = "names")
return <- "anmes"
return <- "names"
counties
county
counties <- county
i <- 1
length(counties)
county_name <- help_find_code(counties[i], return)
return
county <- counties[i]
county
code_df <- purexposure::county_codes
test <- suppressWarnings(as.numeric(county))
is.na(test)
county_upper <- toupper(county)
county_nm <- grep(county_upper, code_df$county_name, value = TRUE)
if (length(county_nm) != 1) {
error <- "yes"
} else {
error <- NULL
pur_code <- as.character(code_df %>%
dplyr::filter(county_name == county_nm) %>%
dplyr::select(pur_code))
fips_code <- as.character(code_df %>%
dplyr::filter(county_name == county_nm) %>%
dplyr::select(fips_code))
name <- strsplit(tolower(county_nm), " ")[[1]]
name <- paste(toupper(substring(name, 1,1)), substring(name, 2),
sep = "", collapse = " ")
}
code_df <- purexposure::county_codes
test <- suppressWarnings(as.numeric(county))
if (is.na(test)) {
county_upper <- toupper(county)
county_nm <- grep(county_upper, code_df$county_name, value = TRUE)
if (length(county_nm) != 1) {
error <- "yes"
} else {
error <- NULL
pur_code <- as.character(code_df %>%
dplyr::filter(county_name == county_nm) %>%
dplyr::select(pur_code))
fips_code <- as.character(code_df %>%
dplyr::filter(county_name == county_nm) %>%
dplyr::select(fips_code))
name <- strsplit(tolower(county_nm), " ")[[1]]
name <- paste(toupper(substring(name, 1,1)), substring(name, 2),
sep = "", collapse = " ")
}
} else {
if (nchar(test) > 2) {
fips_cd <- county
fips_cd <- grep(fips_cd, code_df$fips_code, value = TRUE)
if (length(fips_cd) != 1) {
error <- "yes"
} else {
error <- NULL
county_nm <- as.character(code_df %>%
dplyr::filter(fips_code == fips_cd) %>%
dplyr::select(county_name))
pur_code <- as.character(code_df %>%
dplyr::filter(fips_code == fips_cd) %>%
dplyr::select(pur_code))
fips_code <- fips_cd
}
} else {
pur_cd <- county
pur_cd <- grep(pur_cd, code_df$pur_code, value = TRUE)
if (length(pur_cd) != 1) {
error <- "yes"
} else {
error <- NULL
county_nm <- as.character(code_df %>%
dplyr::filter(pur_code == pur_cd) %>%
dplyr::select(county_name))
fips_code <- as.character(code_df %>%
dplyr::filter(pur_code == pur_cd) %>%
dplyr::select(fips_code))
pur_code <- pur_cd
}
}
name <- strsplit(tolower(county_nm), " ")[[1]]
name <- paste(toupper(substring(name, 1,1)), substring(name, 2),
sep = "", collapse = " ")
}
if (is.null(error)) {
if (return == "pur_codes") {
return(pur_code)
} else if (return == "names") {
return(name)
} else if (return == "fips_codes") {
return(fips_code)
}
} else {
return(NULL)
}
help_find_code(county, return)
county
return
shp <- pull_spdf(county, "section")
trinity_shp <- pull_spdf("trinity")
del_norte_shp <- pull_spdf("08", "township")
plot(trinity_shp)
plot(del_norte_shp)
base::plot(trinity_shp)
?plot
graphics::plot(trinity_shp)
county
shp <- pull_spdf(as.character(county), "section")
calculate_exposure
source('~/Documents/purexposure/R/04-calculate.R')
calculate_exposure
turk <- pull_clean_pur(1996, "fresno") %>%
dplyr::filter(chemname == "PHOSPHORIC ACID") %>%
calculate_exposure(location = "-120.218404, 36.1806",
radius = 1500)
