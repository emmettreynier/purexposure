c("A", "G", "O")) {
meta_data_row <- meta_data_row %>%
dplyr::filter(aerial_ground == aerial_ground_match)
if (length(unique(meta_data_row$radius)) > 1) {
meta_data_row <- meta_data_row %>%
dplyr::filter(radius == radius_match)
}
} else {
if (length(unique(meta_data_row$radius)) > 1) {
meta_data_row <- meta_data_row %>%
dplyr::filter(radius == radius_match)
}
}
} else {
if (class(aerial_ground_match) != "logical" & aerial_ground_match %in%
c("A", "G", "O")) {
meta_data_row <- meta_data %>%
dplyr::filter(aerial_ground == aerial_ground_match)
if (length(unique(meta_data_row$radius)) > 1) {
meta_data_row <- meta_data_row %>%
dplyr::filter(radius == radius_match)
}
} else {
if (length(unique(meta_data_row$radius)) > 1) {
meta_data_row <- meta_data %>%
dplyr::filter(radius == radius_match)
} else {
meta_data_row <- meta_data
}
}
}
meta_list[[l]] <- meta_data_row
}
}
}
l
is.null(asdf)
exists(meta_data_row)
exists("meta_data_row")
!exists("meta_data_row")
for (i in 1:length(exposure_list)) {
if (!is.null(exposure_list[[i]]$error)) {
row <- data.frame(exposure = NA, chemicals = chemicals,
start_date = exposure_mat[i, ]$start_date,
end_date = exposure_mat[i, ]$end_date,
aerial_ground = NA,
location = exposure_mat[i, ]$original_location,
radius = exposure_mat[i, ]$radius,
longitude = NA, latitude = NA,
error_message = exposure_list[[i]]$error,
n_row = 1)
meta_data <- data.frame(pls = NA, chemicals = chemicals, percent = NA,
kg = NA, kg_intersection = NA,
start_date = exposure_mat[i, ]$start_date,
end_date = exposure_mat[i, ]$end_date,
aerial_ground = NA, none_recorded = NA,
location = exposure_mat[i, ]$original_location,
radius = exposure_mat[i, ]$radius,
area = NA, error_message = exposure_list[[i]]$error)
} else {
error_message <- NA
row <- exposure_list[[i]]$result$exposure %>%
dplyr::mutate(error_message = NA) %>%
dplyr::ungroup() %>%
dplyr::mutate(n_row = n())
meta_data <- exposure_list[[i]]$result$meta_data %>%
dplyr::mutate(error_message = NA,
location = exposure_mat[i, ]$original_location)
}
if (i == 1) {
row_out <- row
for (l in 1:unique(row$n_row)) {
meta_row <- row[l,]
chemicals_match <- meta_row$chemicals
aerial_ground_match <- meta_row$aerial_ground
radius_match <- meta_row$radius
if (length(unique(meta_data$chemicals)) > 1) {
meta_data_row <- meta_data %>%
dplyr::filter(chemicals == chemicals_match)
if (class(aerial_ground_match) != "logical" & aerial_ground_match %in%
c("A", "G", "O")) {
meta_data_row <- meta_data_row %>%
dplyr::filter(aerial_ground == aerial_ground_match)
if (length(unique(meta_data_row$radius)) > 1) {
meta_data_row <- meta_data_row %>%
dplyr::filter(radius == radius_match)
}
} else {
if (length(unique(meta_data_row$radius)) > 1) {
meta_data_row <- meta_data_row %>%
dplyr::filter(radius == radius_match)
}
}
} else {
if (class(aerial_ground_match) != "logical" & aerial_ground_match %in%
c("A", "G", "O")) {
meta_data_row <- meta_data %>%
dplyr::filter(aerial_ground == aerial_ground_match)
if (length(unique(meta_data_row$radius)) > 1) {
meta_data_row <- meta_data_row %>%
dplyr::filter(radius == radius_match)
}
} else {
if (length(unique(meta_data_row$radius)) > 1) {
meta_data_row <- meta_data %>%
dplyr::filter(radius == radius_match)
}
}
}
if (!exists("meta_data_row")) {
meta_data_row <- meta_data
}
meta_list[[l]] <- meta_data_row
}
} else {
row_out <- rbind(row_out, row)
starting_point <- length(meta_list)
meta_list_vec <- (1:unique(row$n_row)) + starting_point
for (l in meta_list_vec) {
meta_row <- row[l-starting_point,]
chemicals_match <- meta_row$chemicals
aerial_ground_match <- meta_row$aerial_ground
radius_match <- meta_row$radius
if (length(unique(meta_data$chemicals)) > 1) {
meta_data_row <- meta_data %>%
dplyr::filter(chemicals == chemicals_match)
if (class(aerial_ground_match) != "logical" & aerial_ground_match %in%
c("A", "G", "O")) {
meta_data_row <- meta_data_row %>%
dplyr::filter(aerial_ground == aerial_ground_match)
if (length(unique(meta_data_row$radius)) > 1) {
meta_data_row <- meta_data_row %>%
dplyr::filter(radius == radius_match)
}
} else {
if (length(unique(meta_data_row$radius)) > 1) {
meta_data_row <- meta_data_row %>%
dplyr::filter(radius == radius_match)
}
}
} else {
if (class(aerial_ground_match) != "logical" & aerial_ground_match %in%
c("A", "G", "O")) {
meta_data_row <- meta_data %>%
dplyr::filter(aerial_ground == aerial_ground_match)
if (length(unique(meta_data_row$radius)) > 1) {
meta_data_row <- meta_data_row %>%
dplyr::filter(radius == radius_match)
}
} else {
if (length(unique(meta_data_row$radius)) > 1) {
meta_data_row <- meta_data %>%
dplyr::filter(radius == radius_match)
}
}
}
if (!exists("meta_data_row")) {
meta_data_row <- meta_data
}
meta_list[[l]] <- meta_data_row
}
}
}
for (i in 1:length(exposure_list)) {
if (!is.null(exposure_list[[i]]$error)) {
row <- data.frame(exposure = NA, chemicals = chemicals,
start_date = exposure_mat[i, ]$start_date,
end_date = exposure_mat[i, ]$end_date,
aerial_ground = NA,
location = exposure_mat[i, ]$original_location,
radius = exposure_mat[i, ]$radius,
longitude = NA, latitude = NA,
error_message = exposure_list[[i]]$error,
n_row = 1)
meta_data <- data.frame(pls = NA, chemicals = chemicals, percent = NA,
kg = NA, kg_intersection = NA,
start_date = exposure_mat[i, ]$start_date,
end_date = exposure_mat[i, ]$end_date,
aerial_ground = NA, none_recorded = NA,
location = exposure_mat[i, ]$original_location,
radius = exposure_mat[i, ]$radius,
area = NA, error_message = exposure_list[[i]]$error)
} else {
error_message <- NA
row <- exposure_list[[i]]$result$exposure %>%
dplyr::mutate(error_message = NA) %>%
dplyr::ungroup() %>%
dplyr::mutate(n_row = n())
meta_data <- exposure_list[[i]]$result$meta_data %>%
dplyr::mutate(error_message = NA,
location = exposure_mat[i, ]$original_location)
}
if (i == 1) {
row_out <- row
for (l in 1:unique(row$n_row)) {
meta_row <- row[l,]
chemicals_match <- meta_row$chemicals
aerial_ground_match <- meta_row$aerial_ground
radius_match <- meta_row$radius
if (length(unique(meta_data$chemicals)) > 1) {
meta_data_row <- meta_data %>%
dplyr::filter(chemicals == chemicals_match)
if (class(aerial_ground_match) != "logical" & aerial_ground_match %in%
c("A", "G", "O")) {
meta_data_row <- meta_data_row %>%
dplyr::filter(aerial_ground == aerial_ground_match)
if (length(unique(meta_data_row$radius)) > 1) {
meta_data_row <- meta_data_row %>%
dplyr::filter(radius == radius_match)
}
} else {
if (length(unique(meta_data_row$radius)) > 1) {
meta_data_row <- meta_data_row %>%
dplyr::filter(radius == radius_match)
}
}
} else {
if (class(aerial_ground_match) != "logical" & aerial_ground_match %in%
c("A", "G", "O")) {
meta_data_row <- meta_data %>%
dplyr::filter(aerial_ground == aerial_ground_match)
if (length(unique(meta_data_row$radius)) > 1) {
meta_data_row <- meta_data_row %>%
dplyr::filter(radius == radius_match)
}
} else {
if (length(unique(meta_data$radius)) > 1) {
meta_data_row <- meta_data %>%
dplyr::filter(radius == radius_match)
}
}
}
if (!exists("meta_data_row")) {
meta_data_row <- meta_data
}
meta_list[[l]] <- meta_data_row
}
} else {
row_out <- rbind(row_out, row)
starting_point <- length(meta_list)
meta_list_vec <- (1:unique(row$n_row)) + starting_point
for (l in meta_list_vec) {
meta_row <- row[l-starting_point,]
chemicals_match <- meta_row$chemicals
aerial_ground_match <- meta_row$aerial_ground
radius_match <- meta_row$radius
if (length(unique(meta_data$chemicals)) > 1) {
meta_data_row <- meta_data %>%
dplyr::filter(chemicals == chemicals_match)
if (class(aerial_ground_match) != "logical" & aerial_ground_match %in%
c("A", "G", "O")) {
meta_data_row <- meta_data_row %>%
dplyr::filter(aerial_ground == aerial_ground_match)
if (length(unique(meta_data_row$radius)) > 1) {
meta_data_row <- meta_data_row %>%
dplyr::filter(radius == radius_match)
}
} else {
if (length(unique(meta_data_row$radius)) > 1) {
meta_data_row <- meta_data_row %>%
dplyr::filter(radius == radius_match)
}
}
} else {
if (class(aerial_ground_match) != "logical" & aerial_ground_match %in%
c("A", "G", "O")) {
meta_data_row <- meta_data %>%
dplyr::filter(aerial_ground == aerial_ground_match)
if (length(unique(meta_data_row$radius)) > 1) {
meta_data_row <- meta_data_row %>%
dplyr::filter(radius == radius_match)
}
} else {
if (length(unique(meta_data$radius)) > 1) {
meta_data_row <- meta_data %>%
dplyr::filter(radius == radius_match)
}
}
}
if (!exists("meta_data_row")) {
meta_data_row <- meta_data
}
meta_list[[l]] <- meta_data_row
}
}
}
devtools::install_github("leighseverson/purexposure")
library(purexposure)
fresno <- pull_clean_pur(2000, "fresno")
df <- data.frame(location = c("295 West Saginaw Ave., Caruthers, CA 93609",
"55190 Point Rd., Big Creek, CA 93605"),
start_date = "2000-01-01", end_date = "2000-12-31")
write_exposure(fresno, df, 3000, "~/Documents/fresno")
exp_df <- readRDS("~/Documents/fresno/exposure_df.rds")
exp_df
plot_locations_exposure(exp_df)
#' df <- data.frame(location = c("295 West Saginaw Ave., Caruthers, CA 93609",
#'                               "55190 Point Rd., Big Creek, CA 93605"),
#'                  start_date = "2000-01-01", end_date = "2000-12-31")
#' write_exposure(fresno, df, 3000, "~/Documents/fresno")
#' exp_df <- readRDS("~/Documents/fresno/exposure_df.rds")
#' plot_locations_exposure(exp_df)
#' }
#'
#' @importFrom magrittr %>%
#' @export
plot_locations_exposure <- function(exposure_df, section_township = "section",
fill = "viridis", alpha = 1) {
check <- nrow(exposure_df) == length(unique(exposure_df$location))
if (!check) {
stop(paste0("Filter your exposure_df so that there is one row per location ",
"in your exposure_df."))
}
for (i in 1:nrow(exposure_df)) {
buffer <- help_calculate_buffers(exposure_df[i,])
if (i == 1) {
buffer_out <- buffer
} else {
buffer_out <- bind_rows(buffer_out, buffer)
}
}
buffer_out <- buffer_out %>%
dplyr::full_join(dplyr::select(exposure_df, location, exposure), by = "location")
county <- find_location_county(exposure_df[1,]$location)$county
shp <- pull_spdf(county, section_township)
df <- spdf_to_df(shp)
colormaps_vec <- unlist(colormap::colormaps)
names(colormaps_vec) <- NULL
gradient <- colormap::colormap(fill, nshades = 1000, alpha = alpha)
if (!fill %in% colormaps_vec) {
stop(paste0("The fill argument should be a color palette from the ",
"colormap package."))
}
plot <- ggplot2::ggplot(data = df) +
ggplot2::geom_polygon(ggplot2::aes(x = long, y = lat, group = group),
color = "lightgrey", fill = NA) +
ggplot2::geom_polygon(data = buffer_out, ggplot2::aes(x = long, y = lat,
group = location,
fill = exposure)) +
ggplot2::coord_map() +
ggplot2::theme_void() +
scale_fill_gradientn2(colours = gradient, alpha = alpha,
name = expression(paste("Exposure (", "kg/", "m"^{2}, ")")))
return(plot)
}
plot_locations_exposure(exp_df)
#' df <- data.frame(location = c("295 West Saginaw Ave., Caruthers, CA 93609",
#'                               "55190 Point Rd., Big Creek, CA 93605"),
#'                  start_date = "2000-01-01", end_date = "2000-12-31")
#' write_exposure(fresno, df, 3000, "~/Documents/fresno")
#' exp_df <- readRDS("~/Documents/fresno/exposure_df.rds")
#' plot_locations_exposure(exp_df)
#' }
#'
#' @importFrom magrittr %>%
#' @export
plot_locations_exposure <- function(exposure_df, section_township = "section",
fill = "viridis", alpha = 1) {
check <- nrow(exposure_df) == length(unique(exposure_df$location))
if (!check) {
stop(paste0("Filter your exposure_df so that there is one row per location ",
"in your exposure_df."))
}
for (i in 1:nrow(exposure_df)) {
buffer <- purexposure:::help_calculate_buffers(exposure_df[i,])
if (i == 1) {
buffer_out <- buffer
} else {
buffer_out <- bind_rows(buffer_out, buffer)
}
}
buffer_out <- buffer_out %>%
dplyr::full_join(dplyr::select(exposure_df, location, exposure), by = "location")
county <- find_location_county(exposure_df[1,]$location)$county
shp <- pull_spdf(county, section_township)
df <- spdf_to_df(shp)
colormaps_vec <- unlist(colormap::colormaps)
names(colormaps_vec) <- NULL
gradient <- colormap::colormap(fill, nshades = 1000, alpha = alpha)
if (!fill %in% colormaps_vec) {
stop(paste0("The fill argument should be a color palette from the ",
"colormap package."))
}
plot <- ggplot2::ggplot(data = df) +
ggplot2::geom_polygon(ggplot2::aes(x = long, y = lat, group = group),
color = "lightgrey", fill = NA) +
ggplot2::geom_polygon(data = buffer_out, ggplot2::aes(x = long, y = lat,
group = location,
fill = exposure)) +
ggplot2::coord_map() +
ggplot2::theme_void() +
scale_fill_gradientn2(colours = gradient, alpha = alpha,
name = expression(paste("Exposure (", "kg/", "m"^{2}, ")")))
return(plot)
}
plot_locations_exposure(exp_df)
?bind_rows
#' df <- data.frame(location = c("295 West Saginaw Ave., Caruthers, CA 93609",
#'                               "55190 Point Rd., Big Creek, CA 93605"),
#'                  start_date = "2000-01-01", end_date = "2000-12-31")
#' write_exposure(fresno, df, 3000, "~/Documents/fresno")
#' exp_df <- readRDS("~/Documents/fresno/exposure_df.rds")
#' plot_locations_exposure(exp_df)
#' }
#'
#' @importFrom magrittr %>%
#' @export
plot_locations_exposure <- function(exposure_df, section_township = "section",
fill = "viridis", alpha = 1) {
check <- nrow(exposure_df) == length(unique(exposure_df$location))
if (!check) {
stop(paste0("Filter your exposure_df so that there is one row per location ",
"in your exposure_df."))
}
for (i in 1:nrow(exposure_df)) {
buffer <- purexposure:::help_calculate_buffers(exposure_df[i,])
if (i == 1) {
buffer_out <- buffer
} else {
buffer_out <- dplyr::bind_rows(buffer_out, buffer)
}
}
buffer_out <- buffer_out %>%
dplyr::full_join(dplyr::select(exposure_df, location, exposure), by = "location")
county <- find_location_county(exposure_df[1,]$location)$county
shp <- pull_spdf(county, section_township)
df <- spdf_to_df(shp)
colormaps_vec <- unlist(colormap::colormaps)
names(colormaps_vec) <- NULL
gradient <- colormap::colormap(fill, nshades = 1000, alpha = alpha)
if (!fill %in% colormaps_vec) {
stop(paste0("The fill argument should be a color palette from the ",
"colormap package."))
}
plot <- ggplot2::ggplot(data = df) +
ggplot2::geom_polygon(ggplot2::aes(x = long, y = lat, group = group),
color = "lightgrey", fill = NA) +
ggplot2::geom_polygon(data = buffer_out, ggplot2::aes(x = long, y = lat,
group = location,
fill = exposure)) +
ggplot2::coord_map() +
ggplot2::theme_void() +
scale_fill_gradientn2(colours = gradient, alpha = alpha,
name = expression(paste("Exposure (", "kg/", "m"^{2}, ")")))
return(plot)
}
plot_locations_exposure(exp_df)
#' df <- data.frame(location = c("295 West Saginaw Ave., Caruthers, CA 93609",
#'                               "55190 Point Rd., Big Creek, CA 93605"),
#'                  start_date = "2000-01-01", end_date = "2000-12-31")
#' write_exposure(fresno, df, 3000, "~/Documents/fresno")
#' exp_df <- readRDS("~/Documents/fresno/exposure_df.rds")
#' plot_locations_exposure(exp_df)
#' }
#'
#' @importFrom magrittr %>%
#' @export
plot_locations_exposure <- function(exposure_df, section_township = "section",
fill = "viridis", alpha = 1) {
check <- nrow(exposure_df) == length(unique(exposure_df$location))
if (!check) {
stop(paste0("Filter your exposure_df so that there is one row per location ",
"in your exposure_df."))
}
for (i in 1:nrow(exposure_df)) {
buffer <- purexposure:::help_calculate_buffers(exposure_df[i,])
if (i == 1) {
buffer_out <- buffer
} else {
buffer_out <- dplyr::bind_rows(buffer_out, buffer)
}
}
buffer_out <- buffer_out %>%
dplyr::full_join(dplyr::select(exposure_df, location, exposure), by = "location")
county <- find_location_county(exposure_df[1,]$location)$county
shp <- pull_spdf(county, section_township)
df <- spdf_to_df(shp)
colormaps_vec <- unlist(colormap::colormaps)
names(colormaps_vec) <- NULL
gradient <- colormap::colormap(fill, nshades = 1000, alpha = alpha)
if (!fill %in% colormaps_vec) {
stop(paste0("The fill argument should be a color palette from the ",
"colormap package."))
}
plot <- ggplot2::ggplot(data = df) +
ggplot2::geom_polygon(ggplot2::aes(x = long, y = lat, group = group),
color = "lightgrey", fill = NA) +
ggplot2::geom_polygon(data = buffer_out, ggplot2::aes(x = long, y = lat,
group = location,
fill = exposure)) +
ggplot2::coord_map() +
ggplot2::theme_void() +
purexposure:::scale_fill_gradientn2(colours = gradient, alpha = alpha,
name = expression(paste("Exposure (", "kg/", "m"^{2}, ")")))
return(plot)
}
plot_locations_exposure(exp_df)
devtools::document()
exp_df2 <- readRDS("~/Documents/fresno_schools/exposure_df.rds")
head(exp_df2)
exp_df %>% dplyr::filter(chemicals == "methyl bromide" &
radius == 3000
)
exp_df2 %>% dplyr::filter(chemicals == "methyl bromide" &
radius == 3000
)
dplyr::filter(exp_df2, chemicals == "methyl bromide" &
radius == 3000)[c(1, 3, 5),]
exp_df2 <- dplyr::filter(exp_df2, chemicals == "methyl bromide" &
radius == 3000)[c(1, 3, 5),]
plot_locations_exposure(exp_df2)
devtools::document()
