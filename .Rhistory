county_name <- grep(county_nm, code_df$county_name, value = TRUE)
code <- dplyr::filter(code_df, county_name == county_name)$county_code
} else {
county_cd <- counties[i]
county_code <- grep(county_cd, code_df$county_code, value = TRUE)
code <- county_code
}
for (j in 1:length(years)) {
url <- paste0("ftp://transfer.cdpr.ca.gov/pub/outgoing/pur_archives/pur",
years[j], ".zip")
file <- paste0("pur", years[j], ".zip")
current_dir <- getwd()
dir <- tempdir()
setwd(dir)
if (download_progress) {
quiet <- FALSE
} else {
quiet <- TRUE
}
download.file(url, destfile = file, mode = "wb", quiet = quiet)
unzip(file, exdir = dir)
sm_year <- substr(years[j], 3, 4)
raw_data <- suppressWarnings(suppressMessages(
readr::read_csv(paste0("udc", sm_year, "_", code, ".txt"))))
setwd(current_dir)
if (j == 1) {
years_out <- raw_data
} else {
years_out <- rbind(raw_data, years_out)
}
}
if (i == 1) {
raw_out <- years_out
} else {
raw_out <- rbind(raw_out, years_out)
}
}
return(raw_out)
}
test <- raw_pur(c("fresno", "alameda"), years = c(1990, 1991))
counties <- c("fresno", "alameda")
years <- c(1990, 1991)
verbose <- TRUE
download_progress <- TRUE
code_df <- purexposure::county_codes
if (!all(is.character(counties))) {
stop("County names and/or codes should be character strings.")
}
if (!all(is.numeric(years))) {
stop("Years should be four-digit numeric values.")
}
if (all(is.numeric(years)) & (min(years) < 1990 | max(years) > 2015)) {
stop("Years should be between 1990 and 2015.")
}
test <- suppressWarnings(as.numeric(counties))
order <- data.frame(counties = counties, order = 1:length(counties))
names <- counties[grep(TRUE, is.na(test))]
if (length(names) != 0) {
for (k in 1:length(names)) {
county_nm <- toupper(names[k])
county_test <- grep(county_nm, code_df$county_name, value = TRUE)
if (length(county_test) != 1) {
stop(paste0("\"", names[k], "\"", " doesn't match any California counties. ",
"Check out the county_codes data set included with this package for ",
"county names and corresponding codes."))
}
s <- strsplit(names[k], " ")[[1]]
county_name <- paste(toupper(substring(s, 1,1)), substring(s, 2),
sep = "", collapse = " ")
order_df <- data.frame(counties = names[k], name_clean = county_name)
if (k == 1) {
county_name_out <- county_name
order_df_out <- order_df
} else {
county_name_out <- c(county_name_out, county_name)
order_df_out <- rbind(order_df_out, order_df)
}
}
}
codes <- counties[grep(FALSE, is.na(test))]
if (length(codes) != 0) {
for (l in 1:length(codes)) {
county_cd <- codes[l]
county_code <- grep(county_cd, code_df$county_code, value = TRUE)
if (length(county_code) != 1) {
stop(paste0("\"", codes[l], "\"", " doesn't match any California counties. ",
"Check out the county_codes data set included with this package for ",
"county names and corresponding codes."))
}
county_name2 <- dplyr::filter(code_df, county_code == codes[l])$county_name
county_name2 <- tolower(county_name2)
s2 <- strsplit(county_name2, " ")[[1]]
county_name2 <- paste(toupper(substring(s2, 1,1)), substring(s2, 2),
sep = "", collapse = " ")
order_df2 <- data.frame(counties = codes[l], name_clean = county_name2)
if (l == 1) {
county_name_out2 <- county_name2
order_df_out2 <- order_df2
} else {
county_name_out2 <- c(county_name_out2, county_name2)
order_df_out2 <- rbind(order_df_out2, order_df2)
}
}
}
if (length(names) != 0 & length(codes) != 0) {
order_df <- rbind(order_df_out, order_df_out2)
} else if (length(names) != 0 & length(codes) == 0) {
order_df <- order_df_out
} else if (length(names) == 0 & length(codes) != 0) {
order_df <- order_df_out2
}
order_df_full <- suppressWarnings(dplyr::full_join(order_df, order,
by = "counties") %>%
dplyr::arrange(order))
names_clean <- as.character(order_df_full$name_clean)
if (verbose) {
## counties section
if (length(names_clean) == 1) {
county_message <- paste0(names_clean, " county")
} else if (length(names_clean) == 2) {
county_message <- paste0(names_clean[1], " and ", names_clean[2], " counties")
} else if (length(names_clean) > 2) {
counties_vec <- names_clean[1:length(names_clean)-1]
counties_vec <- paste(counties_vec, collapse = ", ")
county_message <- paste0(counties_vec, ", and ", names_clean[length(names_clean)],
" counties")
}
## years section
if (length(years) == 1) {
year_message <- paste0(years, ".")
} else if (length(years) == 2) {
year_message <- paste0(years[1], " and ", years[2], ".")
} else if (length(years) > 1) {
years_list <- split(years, cumsum(c(1, diff(years) != 1)))
if (length(years_list) == 1) {
year_message <- paste0(years[1], " through ", years[length(years)], ".")
} else {
years_vec <- years[1:length(years)-1]
years_vec <- paste(years_vec, collapse = ", ")
year_message <- paste0(years_vec, ", and ", years[length(years)], ".")
}
}
message(paste0("Pulling PUR data for ", county_message, " for ", year_message))
}
counties
length(counties)
i <-
1
i
test2 <- suppressWarnings(as.numeric(counties[i]))
test2
if (is.na(test2)) {
county_nm <- toupper(counties[i])
county_name <- grep(county_nm, code_df$county_name, value = TRUE)
code <- dplyr::filter(code_df, county_name == county_name)$county_code
} else {
county_cd <- counties[i]
county_code <- grep(county_cd, code_df$county_code, value = TRUE)
code <- county_code
}
code
is.na(test2)
county_nm <- toupper(counties[i])
county_nm
county_name <- grep(county_nm, code_df$county_name, value = TRUE)
county_name
code <- dplyr::filter(code_df, county_name == county_name)$county_code
code
county_nm <- grep(county_nm, code_df$county_name, value = TRUE)
code <- dplyr::filter(code_df, county_name == county_nm)$county_code
code
test2 <- suppressWarnings(as.numeric(counties[i]))
if (is.na(test2)) {
county_nm <- toupper(counties[i])
county_nm <- grep(county_nm, code_df$county_name, value = TRUE)
code <- dplyr::filter(code_df, county_name == county_nm)$county_code
} else {
county_cd <- counties[i]
county_code <- grep(county_cd, code_df$county_code, value = TRUE)
code <- county_code
}
code
raw_pur <- function(counties, years, verbose = TRUE, download_progress = FALSE) {
code_df <- purexposure::county_codes
if (!all(is.character(counties))) {
stop("County names and/or codes should be character strings.")
}
if (!all(is.numeric(years))) {
stop("Years should be four-digit numeric values.")
}
if (all(is.numeric(years)) & (min(years) < 1990 | max(years) > 2015)) {
stop("Years should be between 1990 and 2015.")
}
test <- suppressWarnings(as.numeric(counties))
order <- data.frame(counties = counties, order = 1:length(counties))
names <- counties[grep(TRUE, is.na(test))]
if (length(names) != 0) {
for (k in 1:length(names)) {
county_nm <- toupper(names[k])
county_test <- grep(county_nm, code_df$county_name, value = TRUE)
if (length(county_test) != 1) {
stop(paste0("\"", names[k], "\"", " doesn't match any California counties. ",
"Check out the county_codes data set included with this package for ",
"county names and corresponding codes."))
}
s <- strsplit(names[k], " ")[[1]]
county_name <- paste(toupper(substring(s, 1,1)), substring(s, 2),
sep = "", collapse = " ")
order_df <- data.frame(counties = names[k], name_clean = county_name)
if (k == 1) {
county_name_out <- county_name
order_df_out <- order_df
} else {
county_name_out <- c(county_name_out, county_name)
order_df_out <- rbind(order_df_out, order_df)
}
}
}
codes <- counties[grep(FALSE, is.na(test))]
if (length(codes) != 0) {
for (l in 1:length(codes)) {
county_cd <- codes[l]
county_code <- grep(county_cd, code_df$county_code, value = TRUE)
if (length(county_code) != 1) {
stop(paste0("\"", codes[l], "\"", " doesn't match any California counties. ",
"Check out the county_codes data set included with this package for ",
"county names and corresponding codes."))
}
county_name2 <- dplyr::filter(code_df, county_code == codes[l])$county_name
county_name2 <- tolower(county_name2)
s2 <- strsplit(county_name2, " ")[[1]]
county_name2 <- paste(toupper(substring(s2, 1,1)), substring(s2, 2),
sep = "", collapse = " ")
order_df2 <- data.frame(counties = codes[l], name_clean = county_name2)
if (l == 1) {
county_name_out2 <- county_name2
order_df_out2 <- order_df2
} else {
county_name_out2 <- c(county_name_out2, county_name2)
order_df_out2 <- rbind(order_df_out2, order_df2)
}
}
}
if (length(names) != 0 & length(codes) != 0) {
order_df <- rbind(order_df_out, order_df_out2)
} else if (length(names) != 0 & length(codes) == 0) {
order_df <- order_df_out
} else if (length(names) == 0 & length(codes) != 0) {
order_df <- order_df_out2
}
order_df_full <- suppressWarnings(dplyr::full_join(order_df, order,
by = "counties") %>%
dplyr::arrange(order))
names_clean <- as.character(order_df_full$name_clean)
if (verbose) {
## counties section
if (length(names_clean) == 1) {
county_message <- paste0(names_clean, " county")
} else if (length(names_clean) == 2) {
county_message <- paste0(names_clean[1], " and ", names_clean[2], " counties")
} else if (length(names_clean) > 2) {
counties_vec <- names_clean[1:length(names_clean)-1]
counties_vec <- paste(counties_vec, collapse = ", ")
county_message <- paste0(counties_vec, ", and ", names_clean[length(names_clean)],
" counties")
}
## years section
if (length(years) == 1) {
year_message <- paste0(years, ".")
} else if (length(years) == 2) {
year_message <- paste0(years[1], " and ", years[2], ".")
} else if (length(years) > 1) {
years_list <- split(years, cumsum(c(1, diff(years) != 1)))
if (length(years_list) == 1) {
year_message <- paste0(years[1], " through ", years[length(years)], ".")
} else {
years_vec <- years[1:length(years)-1]
years_vec <- paste(years_vec, collapse = ", ")
year_message <- paste0(years_vec, ", and ", years[length(years)], ".")
}
}
message(paste0("Pulling PUR data for ", county_message, " for ", year_message))
}
for (i in 1:length(counties)) {
test2 <- suppressWarnings(as.numeric(counties[i]))
if (is.na(test2)) {
county_nm <- toupper(counties[i])
county_nm <- grep(county_nm, code_df$county_name, value = TRUE)
code <- dplyr::filter(code_df, county_name == county_nm)$county_code
} else {
county_cd <- counties[i]
county_code <- grep(county_cd, code_df$county_code, value = TRUE)
code <- county_code
}
for (j in 1:length(years)) {
url <- paste0("ftp://transfer.cdpr.ca.gov/pub/outgoing/pur_archives/pur",
years[j], ".zip")
file <- paste0("pur", years[j], ".zip")
current_dir <- getwd()
dir <- tempdir()
setwd(dir)
if (download_progress) {
quiet <- FALSE
} else {
quiet <- TRUE
}
download.file(url, destfile = file, mode = "wb", quiet = quiet)
unzip(file, exdir = dir)
sm_year <- substr(years[j], 3, 4)
raw_data <- suppressWarnings(suppressMessages(
readr::read_csv(paste0("udc", sm_year, "_", code, ".txt"))))
setwd(current_dir)
if (j == 1) {
years_out <- raw_data
} else {
years_out <- rbind(raw_data, years_out)
}
}
if (i == 1) {
raw_out <- years_out
} else {
raw_out <- rbind(raw_out, years_out)
}
}
return(raw_out)
}
test <- raw_pur(c("fresno", "alameda"), 2002:2003)
head(test)
test <- raw_pur(c("fresno", "alameda"), 2002:2003, download_progress = TRUE)
counties <- c("fresno", "alameda")
years <- 2000:2001
verbose <- TRUE
download_progress <- TRUE
code_df <- purexposure::county_codes
if (!all(is.character(counties))) {
stop("County names and/or codes should be character strings.")
}
if (!all(is.numeric(years))) {
stop("Years should be four-digit numeric values.")
}
if (all(is.numeric(years)) & (min(years) < 1990 | max(years) > 2015)) {
stop("Years should be between 1990 and 2015.")
}
test <- suppressWarnings(as.numeric(counties))
order <- data.frame(counties = counties, order = 1:length(counties))
names <- counties[grep(TRUE, is.na(test))]
if (length(names) != 0) {
for (k in 1:length(names)) {
county_nm <- toupper(names[k])
county_test <- grep(county_nm, code_df$county_name, value = TRUE)
if (length(county_test) != 1) {
stop(paste0("\"", names[k], "\"", " doesn't match any California counties. ",
"Check out the county_codes data set included with this package for ",
"county names and corresponding codes."))
}
s <- strsplit(names[k], " ")[[1]]
county_name <- paste(toupper(substring(s, 1,1)), substring(s, 2),
sep = "", collapse = " ")
order_df <- data.frame(counties = names[k], name_clean = county_name)
if (k == 1) {
county_name_out <- county_name
order_df_out <- order_df
} else {
county_name_out <- c(county_name_out, county_name)
order_df_out <- rbind(order_df_out, order_df)
}
}
}
codes <- counties[grep(FALSE, is.na(test))]
if (length(codes) != 0) {
for (l in 1:length(codes)) {
county_cd <- codes[l]
county_code <- grep(county_cd, code_df$county_code, value = TRUE)
if (length(county_code) != 1) {
stop(paste0("\"", codes[l], "\"", " doesn't match any California counties. ",
"Check out the county_codes data set included with this package for ",
"county names and corresponding codes."))
}
county_name2 <- dplyr::filter(code_df, county_code == codes[l])$county_name
county_name2 <- tolower(county_name2)
s2 <- strsplit(county_name2, " ")[[1]]
county_name2 <- paste(toupper(substring(s2, 1,1)), substring(s2, 2),
sep = "", collapse = " ")
order_df2 <- data.frame(counties = codes[l], name_clean = county_name2)
if (l == 1) {
county_name_out2 <- county_name2
order_df_out2 <- order_df2
} else {
county_name_out2 <- c(county_name_out2, county_name2)
order_df_out2 <- rbind(order_df_out2, order_df2)
}
}
}
if (length(names) != 0 & length(codes) != 0) {
order_df <- rbind(order_df_out, order_df_out2)
} else if (length(names) != 0 & length(codes) == 0) {
order_df <- order_df_out
} else if (length(names) == 0 & length(codes) != 0) {
order_df <- order_df_out2
}
order_df_full <- suppressWarnings(dplyr::full_join(order_df, order,
by = "counties") %>%
dplyr::arrange(order))
names_clean <- as.character(order_df_full$name_clean)
if (verbose) {
## counties section
if (length(names_clean) == 1) {
county_message <- paste0(names_clean, " county")
} else if (length(names_clean) == 2) {
county_message <- paste0(names_clean[1], " and ", names_clean[2], " counties")
} else if (length(names_clean) > 2) {
counties_vec <- names_clean[1:length(names_clean)-1]
counties_vec <- paste(counties_vec, collapse = ", ")
county_message <- paste0(counties_vec, ", and ", names_clean[length(names_clean)],
" counties")
}
## years section
if (length(years) == 1) {
year_message <- paste0(years, ".")
} else if (length(years) == 2) {
year_message <- paste0(years[1], " and ", years[2], ".")
} else if (length(years) > 1) {
years_list <- split(years, cumsum(c(1, diff(years) != 1)))
if (length(years_list) == 1) {
year_message <- paste0(years[1], " through ", years[length(years)], ".")
} else {
years_vec <- years[1:length(years)-1]
years_vec <- paste(years_vec, collapse = ", ")
year_message <- paste0(years_vec, ", and ", years[length(years)], ".")
}
}
message(paste0("Pulling PUR data for ", county_message, " for ", year_message))
}
for (i in 1:length(years)) {
url <- paste0("ftp://transfer.cdpr.ca.gov/pub/outgoing/pur_archives/pur",
years[i], ".zip")
file <- paste0("pur", years[i], ".zip")
current_dir <- getwd()
dir <- tempdir()
setwd(dir)
if (download_progress) {
quiet <- FALSE
} else {
quiet <- TRUE
}
download.file(url, destfile = file, mode = "wb", quiet = quiet)
unzip(file, exdir = dir)
sm_year <- substr(years[i], 3, 4)
for (j in 1:length(counties)) {
raw_data <- suppressWarnings(suppressMessages(
readr::read_csv(paste0("udc", sm_year, "_", code, ".txt"))))
if (j == 1) {
year_out <- raw_data
} else {
year_out <- rbind(year_out, raw_data)
}
}
setwd(current_dir)
if (i == 1) {
raw_out <- year_out
} else {
raw_out <- rbind(raw_out, year_out)
}
}
for (i in 1:length(years)) {
url <- paste0("ftp://transfer.cdpr.ca.gov/pub/outgoing/pur_archives/pur",
years[i], ".zip")
file <- paste0("pur", years[i], ".zip")
current_dir <- getwd()
dir <- tempdir()
setwd(dir)
if (download_progress) {
quiet <- FALSE
} else {
quiet <- TRUE
}
download.file(url, destfile = file, mode = "wb", quiet = quiet)
unzip(file, exdir = dir)
sm_year <- substr(years[i], 3, 4)
for (j in 1:length(counties)) {
test2 <- suppressWarnings(as.numeric(counties[j]))
if (is.na(test2)) {
county_nm <- toupper(counties[j])
county_nm <- grep(county_nm, code_df$county_name, value = TRUE)
code <- dplyr::filter(code_df, county_name == county_nm)$county_code
} else {
county_cd <- counties[i]
county_code <- grep(county_cd, code_df$county_code, value = TRUE)
code <- county_code
}
raw_data <- suppressWarnings(suppressMessages(
readr::read_csv(paste0("udc", sm_year, "_", code, ".txt"))))
if (j == 1) {
year_out <- raw_data
} else {
year_out <- rbind(year_out, raw_data)
}
}
setwd(current_dir)
if (i == 1) {
raw_out <- year_out
} else {
raw_out <- rbind(raw_out, year_out)
}
}
head(raw_out)
head(select(raw_out, county_cd, applic_dt))
tail(select(raw_out, county_cd, applic_dt))
list.files("~/Documents/pesticides_project/data-raw")
list.files("~/Documents/pesticides_project/data-raw/PUR")
list.files("~/Documents/pesticides_project/data-raw/PUR/1990")
code_df
