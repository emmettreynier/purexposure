% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/04-calculate.R
\name{calculate_exposure}
\alias{calculate_exposure}
\title{Calculate exposure to active ingredients present in applied pesticides.}
\usage{
calculate_exposure(clean_pur_df, location, radius, time_period = NULL,
  start_date = NULL, end_date = NULL, chemicals = "all",
  aerial_ground = FALSE, verbose = TRUE)
}
\arguments{
\item{clean_pur_df}{A data frame returned by \code{pull_clean_pur} that
includes data for the county of your location (before running
\code{pull_clean_pur}, you can use the
\code{find_location_county} function to figure this out), the time period,
and the active ingredients or chemical classes for which you want to
calculate exposure.}

\item{location}{A length-one character string. Either a California address
including street name, city, state, and zip code, or a pair of coordinates
in the form "longitude, latitude".}

\item{radius}{A numeric value greater than zero that gives the radius in meters
defining the buffer around your location in which you would like to
calculate exposure. For reference, the length and width of a PLS section is
about 1,609 meters (1 mile). That of a township could range from about
9,656 to 11,265 meters (6-7 miles).}

\item{time_period}{Optional. A character string giving a time period over which you
would like to calculate exposure. For example, if you enter "6 months" for
\code{time_period}, \code{calculate_exposure} will calculate exposure for
every six month period starting January 1 of the earliest year present in the
\code{clean_pur_df} data frame. Start and end dates can be optionally specified
with the \code{start_date} and \code{end_date} arguments. Alternatively, to
calculate exposure over only one specified time period, you can leave this
argument NULL and specify start and end dates.}

\item{start_date}{Optional. "yyyy-mm-dd" specifying the start date for
exposure estimation. This date should be present in the \code{clean_pur_df}
data frame.}

\item{end_date}{Optional. "yyyy-mm-dd" specifying the end date for exposure
estimation. This date should be present in the \code{clean_pur_df}
data frame.}

\item{chemicals}{Either "all" or "chemical_class". The default is "all", which
will calculate exposure to the summed active ingredients present in the
\code{clean_pur_df} data frame. Enter "chemical_class" to calculate
exposure to each of the chemical classes present in the \code{chemical_class}
column of your \code{clean_pur_df} data frame.}

\item{aerial_ground}{TRUE / FALSE for whether you would like to
incorporate aerial/ground application into exposure calculations. If
\code{aerial_ground = TRUE}, there should be an \code{aerial_ground}
column in the input \code{clean_pur_df} data frame. There will be a value of
exposure calculated for each chemical ("all" or by chemical class) and for
each method of application: aerial or ground. The default is FALSE.}

\item{verbose}{TRUE / FALSE for whether you would like a message to print out
while the function is running. The default is \code{TRUE}.}
}
\value{
A list with five elements:
 \describe{
   \item{exposure}{A data frame with 7 columns: \code{exposure},
   the estimate of exposure in kg/m^2, \code{chemicals}, (either "all",
   indicating that all active ingredients present in the \code{clean_pur_df}
   were summed or the chemical class(es) specified in the \code{clean_pur_df}
   data frame), \code{start_date}, \code{end_date}, \code{aerial_ground},
   which can take values of "A" = aerial, "G" = ground, and "O" = others, (if
   the \code{aerial_ground} argument is \code{FALSE}, \code{aerial_ground}
   will be \code{NA} in the \code{exposure} data frame), \code{location}, and
   \code{radius}, the radius in meters for the buffer extending from the
   location.}
   \item{meta_data}{A data frame with 12 columns and at least one row for
   every section or township intersected by the specified buffer extending
   from the given location. Columns include \code{pls}, giving either the
   Public Land Survey (PLS) section (9 characters long) or township (7
   characters long), \code{chemicals}, \code{percent}, the percent that the
   PLS unit is overlapped by the buffer, \code{kg}, the total amount of kg
   applied for the specified chemicals and date range in that section or
   township, \code{kg_intersection}, the amount of kilograms applied
   multiplied by the percent of overlap, \code{start_date} and \code{end_date},
   \code{aerial_ground}, which can take values of "A" (aerial), "G" (ground),
   or "O" (other), and will be \code{NA} if exposure calculations did not
   take aerial/ground application into account, \code{none_recorded}, logical
   for whether any pesticide application was recorded for the specified section
   or township, date range, and chemicals, \code{location}, and \code{radius}.}
   \item{buffer_plot}{A data frame with 24 columns. Contains spatial plotting
   data for the buffer and overlapping sections or townships. You can use the
   \code{df_plot} function to quickly plot and get a rough idea of the
   area for which exposure was calculated, before moving on to other
   plot_* functions.}
   \item{county_plot}{A ggplot2 plot showing the location of your specified
   buffer in the context of the county. Depending on if your \code{clean_pur_df}
   data frame was summed by section or township, the county will be shown
   with the relevant PLS units.}
   \item{clean_pur_df}{The data frame supplied to the \code{clean_pur_df}
   argument, filtered to the county and date range for which exposure
   was calculated.}
 }
}
\description{
For a particular location, buffer radius, date range, and active ingredient
or class of active ingredients, \code{calculate_exposure} calculates an
estimate of exposure in kg of active ingredient per m^2.
}
\section{Note}{

 \itemize{
   \item{If the \code{time_period}, \code{start_date}, and \code{end_date}
         arguments are all left as NULL (their defaults), then exposure will
         be estimated across the entire date range of the \code{clean_pur_df}
         data frame.}
   \item{If you pulled PUR data from \code{pull_clean_pur} specifying
         \code{sum_application = TRUE} and \code{unit = "township"}, then
         exposure will be calculated based on townships. Using the
         \code{df_plot} function to plot the returned \code{buffer_plot}
         list element could be helpful to see the difference between
         calculating exposure based on sections or townships for a certain
         buffer radius.}
    \item{This function takes advantage of the Google Maps Geocoding API, and
          is limited by the standard usage limit of 2,500 free requests per
          day and 50 requests per second.
\url{https://developers.google.com/maps/documentation/geocoding/usage-limits}}
}
}

\examples{
\dontrun{
clean_pur <- pull_clean_pur(2000, counties = "10")
exposure_list <- calculate_exposure(clean_pur,
                                    location = "13883 Lassen Ave, Helm, CA 93627",
                                    radius = 3000)
names(exposure_list)
exposure_list$county_plot

# specify time intervals
exp_list2 <- calculate_exposure(clean_pur,
                                location = "13883 Lassen Ave, Helm, CA 93627",
                                radius = 3000,
                                time_period = "4 months")
exp_list2$exposure

# calculate exposure by township
clean_pur2 <- pull_clean_pur(1995, counties = "san bernardino",
                             sum_application = TRUE, unit = "township")
exp_list3 <- calculate_exposure(clean_pur2,
                                location = "-116.45, 34.96",
                                radius = 5000)
df_plot(exp_list3$buffer_plot)
exp_list3$county_plot

# calculate exposure by specified chemical classes
# this is an example of `none_recorded = TRUE`
chemical_class_df <- rbind(find_chemical_codes(2000, "methylene"),
                           find_chemical_codes(2000, "aldehyde")) \%>\%
   dplyr::rename(chemical_class = chemical)
exp_list4 <- pull_clean_pur(1995, "fresno",
                            chemicals = chemical_class_df$chemname,
                            sum_application = TRUE,
                            sum = "chemical_class",
                            chemical_class = chemical_class_df) \%>\%
   calculate_exposure(location = "13883 Lassen Ave, Helm, CA 93627",
                      radius = 1500,
                      chemicals = "chemical_class")
exp_list4$meta_data

# incorporate aerial/ground application information
exp_list5 <- pull_clean_pur(2000, "yolo") \%>\%
   calculate_exposure(location = "-121.9018, 38.7646",
   radius = 2500,
   aerial_ground = TRUE)
exp_list5$exposure
}
}
